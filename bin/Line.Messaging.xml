<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Line.Messaging</name>
    </assembly>
    <members>
        <member name="T:Line.Messaging.ContentStream">
            <summary>
            Stream object for content such as image, file, etc.
            </summary>
        </member>
        <member name="T:Line.Messaging.ErrorResponseMessage">
            <summary>
            Error returned from LINE Platform
            https://developers.line.me/en/docs/messaging-api/reference/#error-responses
            </summary>
        </member>
        <member name="P:Line.Messaging.ErrorResponseMessage.Message">
            <summary>
            Summary of the error
            </summary>
        </member>
        <member name="P:Line.Messaging.ErrorResponseMessage.Details">
            <summary>
            Details of the error
            </summary>
        </member>
        <member name="T:Line.Messaging.ErrorResponseMessage.ErrorDetails">
            <summary>
            Details of the error
            </summary>
        </member>
        <member name="P:Line.Messaging.ErrorResponseMessage.ErrorDetails.Message">
            <summary>
            Details of the error
            </summary>
        </member>
        <member name="P:Line.Messaging.ErrorResponseMessage.ErrorDetails.Property">
            <summary>
            Location of where the error occurred
            </summary>
        </member>
        <member name="T:Line.Messaging.InvalidSignatureException">
            <summary>
            Capture Invalid Signature Exception.
            </summary>
        </member>
        <member name="T:Line.Messaging.LineResponseException">
            <summary>
            Capture Error from LINE platform
            </summary>
        </member>
        <member name="P:Line.Messaging.LineResponseException.StatusCode">
            <summary>
            HTTP Status Code
            </summary>
        </member>
        <member name="P:Line.Messaging.LineResponseException.ResponseMessage">
            <summary>
            Error returned from LINE Platform
            </summary>
        </member>
        <member name="T:Line.Messaging.UserIdMismatchException">
            <summary>
            Capture Invalid Signature Exception.
            </summary>
        </member>
        <member name="M:Line.Messaging.HttpResponseMessageExtensions.EnsureSuccessStatusCodeAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Validate the response status.
            </summary>
            <param name="response">HttpResponseMessage</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="T:Line.Messaging.ILineMessagingClient">
            <summary>
            LINE Messaging API client, which handles request/response to LINE server.
            </summary>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.ReplyMessageAsync(System.String,System.Collections.Generic.IList{Line.Messaging.ISendMessage})">
            <summary>
            Respond to events from users, groups, and rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-reply-message
            </summary>
            <param name="replyToken">ReplyToken</param>
            <param name="messages">Reply messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.ReplyMessageAsync(System.String,System.String[])">
            <summary>
            Respond to events from users, groups, and rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-reply-message
            </summary>
            <param name="replyToken">ReplyToken</param>
            <param name="messages">Reply Text messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.ReplyMessageWithJsonAsync(System.String,System.String[])">
            <summary>
            Respond to events from users, groups, and rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-reply-message
            </summary>
            <param name="replyToken">ReplyToken</param>
            <param name="messages">Set reply messages with Json string.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.PushMessageAsync(System.String,System.Collections.Generic.IList{Line.Messaging.ISendMessage})">
            <summary>
            Send messages to a user, group, or room at any time.
            Note: Use of push messages are limited to certain plans.
            </summary>
            <param name="to">ID of the receiver</param>
            <param name="messages">Reply messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.PushMessageWithJsonAsync(System.String,System.String[])">
            <summary>
            Send messages to a user, group, or room at any time.
            Note: Use of push messages are limited to certain plans.
            </summary>
            <param name="to">ID of the receiver</param>
            <param name="messages">Set reply messages with Json string.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.PushMessageAsync(System.String,System.String[])">
            <summary>
            Send text messages to a user, group, or room at any time.
            Note: Use of push messages are limited to certain plans.
            </summary>
            <param name="to">ID of the receiver</param>
            <param name="messages">Reply text messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.MultiCastMessageAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Line.Messaging.ISendMessage})">
            <summary>
            Send push messages to multiple users at any time.
            Only available for plans which support push messages. Messages cannot be sent to groups or rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-multicast-messages
            </summary>
            <param name="to">IDs of the receivers. Max: 150 users</param>
            <param name="messages">Reply messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.MultiCastMessageWithJsonAsync(System.Collections.Generic.IList{System.String},System.String[])">
            <summary>
            Send push messages to multiple users at any time.
            Only available for plans which support push messages. Messages cannot be sent to groups or rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-multicast-messages
            </summary>
            <param name="to">IDs of the receivers. Max: 150 users</param>
            <param name="messages">Set reply messages with Json string.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.MultiCastMessageAsync(System.Collections.Generic.IList{System.String},System.String[])">
            <summary>
            Send push text messages to multiple users at any time.
            Only available for plans which support push messages. Messages cannot be sent to groups or rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-multicast-messages
            </summary>
            <param name="to">IDs of the receivers. Max: 150 users</param>
            <param name="messages">Reply text messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetContentStreamAsync(System.String)">
            <summary>
            Retrieve image, video, and audio data sent by users as Stream
            https://developers.line.me/en/docs/messaging-api/reference/#get-content
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Content as ContentStream</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetContentBytesAsync(System.String)">
            <summary>
            Retrieve image, video, and audio data sent by users as byte array
            https://developers.line.me/en/docs/messaging-api/reference/#get-content
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Content as byte array</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetUserProfileAsync(System.String)">
            <summary>
            Get user profile information.
            https://developers.line.me/en/docs/messaging-api/reference/#get-profile
            </summary>
            <param name="userId">User ID</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetGroupMemberProfileAsync(System.String,System.String)">
            <summary>
            Gets the user profile of a member of a group that the bot is in. This includes user profiles of users who have not added the bot as a friend or have blocked the bot.
            Use the group ID and user ID returned in the source object of webhook event objects. Do not use the LINE ID used in the LINE app. 
            https://developers.line.me/en/docs/messaging-api/reference/#get-group-member-profile
            </summary>
            <param name="groupId">Identifier of the group</param>
            <param name="userId">Identifier of the user</param>
            <returns>User Profile</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetGroupMemberIdsAsync(System.String,System.String)">
            <summary>
            Gets the user IDs of the members of a group that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            This feature is only available for LINE@ Approved accounts or official accounts.
            Use the group Id returned in the source object of webhook event objects. 
            Users who have not agreed to the Official Accounts Terms of Use are not included in memberIds. There is no fixed number of memberIds. 
            https://developers.line.me/en/docs/messaging-api/reference/#get-group-member-user-ids
            </summary>
            <param name="groupId">Identifier of the group</param>
            <param name="continuationToken">ContinuationToken</param>
            <returns>GroupMemberIds</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetGroupMemberProfilesAsync(System.String)">
            <summary>
            Gets the user profiles of the members of a group that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            Use the group Id returned in the source object of webhook event objects. 
            This feature is only available for LINE@ Approved accounts or official accounts
            </summary>
            <param name="groupId">Identifier of the group</param>
            <returns>List of UserProfile</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.LeaveFromGroupAsync(System.String)">
            <summary>
            Leave a group.
            Use the ID that is returned via webhook from the source group. 
            https://developers.line.me/en/docs/messaging-api/reference/#leave-group
            </summary>
            <param name="groupId">Group ID</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetRoomMemberProfileAsync(System.String,System.String)">
            <summary>
            Gets the user profile of a member of a room that the bot is in. This includes user profiles of users who have not added the bot as a friend or have blocked the bot.
            Use the room ID and user ID returned in the source object of webhook event objects. Do not use the LINE ID used in the LINE app
            </summary>
            <param name="roomId">Identifier of the room</param>
            <param name="userId">Identifier of the user</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetRoomMemberIdsAsync(System.String,System.String)">
            <summary>
            Gets the user IDs of the members of a room that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            Use the room ID returned in the source object of webhook event objects. 
            This feature is only available for LINE@ Approved accounts or official accounts.
            https://developers.line.me/en/docs/messaging-api/reference/#get-room-member-user-ids
            </summary>
            <param name="roomId">Identifier of the room</param>
            <param name="continuationToken">ContinuationToken</param>
            <returns>GroupMemberIds</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetRoomMemberProfilesAsync(System.String)">
            <summary>
            Gets the user profiles of the members of a room that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            Use the room ID returned in the source object of webhook event objects. 
            This feature is only available for LINE@ Approved accounts or official accounts.
            </summary>
            <param name="roomId">Identifier of the room</param>
            <returns>List of UserProfiles</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.LeaveFromRoomAsync(System.String)">
            <summary>
            Leave a room.
            Use the ID that is returned via webhook from the source room. 
            </summary>
            <param name="roomId">Room ID</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetRichMenuAsync(System.String)">
            <summary>
            Gets a rich menu via a rich menu ID.
            https://developers.line.me/en/docs/messaging-api/reference/#get-rich-menu
            </summary>
            <param name="richMenuId">ID of an uploaded rich menu</param>
            <returns>RichMenu</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.CreateRichMenuAsync(Line.Messaging.RichMenu)">
            <summary>
            Creates a rich menu. 
            Note: You must upload a rich menu image and link the rich menu to a user for the rich menu to be displayed.You can create up to 10 rich menus for one bot.
            The rich menu represented as a rich menu object.
            https://developers.line.me/en/docs/messaging-api/reference/#create-rich-menu
            </summary>
            <param name="richMenu">RichMenu</param>
            <returns>RichMenu Id</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.DeleteRichMenuAsync(System.String)">
            <summary>
            Deletes a rich menu.
            https://developers.line.me/en/docs/messaging-api/reference/#delete-rich-menu
            </summary>
            <param name="richMenuId">RichMenu Id</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetRichMenuIdOfUserAsync(System.String)">
            <summary>
            Gets the ID of the rich menu linked to a user.
            https://developers.line.me/en/docs/messaging-api/reference/#get-rich-menu-id-of-user
            </summary>
            <param name="userId">ID of the user</param>
            <returns>RichMenu Id</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.SetDefaultRichMenuAsync(System.String)">
            <summary>
            Sets a default ritch menu
            </summary>
            <param name="richMenuId">
            ID of an uploaded rich menu
            </param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.LinkRichMenuToUserAsync(System.String,System.String)">
            <summary>
            Links a rich menu to a user.
            Note: Only one rich menu can be linked to a user at one time.
            https://developers.line.me/en/docs/messaging-api/reference/#link-rich-menu-to-user
            </summary>
            <param name="userId">ID of the user</param>
            <param name="richMenuId">ID of an uploaded rich menu</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.UnLinkRichMenuFromUserAsync(System.String)">
            <summary>
            Unlinks a rich menu from a user.
            https://developers.line.me/en/docs/messaging-api/reference/#unlink-rich-menu-from-user
            </summary>
            <param name="userId">ID of the user</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.DownloadRichMenuImageAsync(System.String)">
            <summary>
            Downloads an image associated with a rich menu.
            https://developers.line.me/en/docs/messaging-api/reference/#download-rich-menu-image
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <returns>Image as ContentStream</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.UploadRichMenuJpegImageAsync(System.IO.Stream,System.String)">
            <summary>
            Uploads and attaches a jpeg image to a rich menu.
            Images must have one of the following resolutions: 2500x1686, 2500x843. 
            You cannot replace an image attached to a rich menu.To update your rich menu image, create a new rich menu object and upload another image.
            https://developers.line.me/en/docs/messaging-api/reference/#upload-rich-menu-image
            </summary>
            <param name="stream">Jpeg image for the rich menu</param>
            <param name="richMenuId">The ID of the rich menu to attach the image to.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.UploadRichMenuPngImageAsync(System.IO.Stream,System.String)">
            <summary>
            Uploads and attaches a png image to a rich menu.
            Images must have one of the following resolutions: 2500x1686, 2500x843. 
            You cannot replace an image attached to a rich menu.To update your rich menu image, create a new rich menu object and upload another image.
            https://developers.line.me/en/docs/messaging-api/reference/#upload-rich-menu-image
            </summary>
            <param name="stream">Png image for the rich menu</param>
            <param name="richMenuId">The ID of the rich menu to attach the image to.</param>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetRichMenuListAsync">
            <summary>
            Gets a list of all uploaded rich menus.
            https://developers.line.me/en/docs/messaging-api/reference/#get-rich-menu-list
            </summary>
            <returns>List of ResponseRichMenu</returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.IssueLinkTokenAsync(System.String)">
            <summary>
            Issues a link token used for the account link feature.
            <para>https://developers.line.me/en/docs/messaging-api/linking-accounts</para>
            </summary>
            <param name="userId">
            User ID for the LINE account to be linked. Found in the source object of account link event objects. Do not use the LINE ID used in the LINE app.
            </param>
            <returns>
            Returns the status code 200 and a link token. Link tokens are valid for 10 minutes and can only be used once.
            Note: The validity period may change without notice.
            </returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetNumberOfSentReplyMessagesAsync(System.DateTime)">
            <summary>
            Gets the number of messages sent with the /bot/message/reply endpoint.
            The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.
            </summary>
            <param name="date">
            - Date the messages were sent
            - Format: yyyyMMdd(Example: 20191231)
            - Timezone: UTC+9
            </param>
            <returns>
            <see cref="T:Line.Messaging.NumberOfSentMessages"/>
            </returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetNumberOfSentPushMessagesAsync(System.DateTime)">
             <summary>
             Gets the number of messages sent with the /bot/message/push endpoint.
             The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.
            </summary>
             <param name="date">
             - Date the messages were sent
             - Format: yyyyMMdd(Example: 20191231)
             - Timezone: UTC+9
             </param>
             <returns>
             <see cref="T:Line.Messaging.NumberOfSentMessages"/>
             </returns>
        </member>
        <member name="M:Line.Messaging.ILineMessagingClient.GetNumberOfSentMulticastMessagesAsync(System.DateTime)">
            <summary>
            Gets the number of messages sent with the /bot/message/push endpoint.
            The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.
            </summary>
            <param name="date">
            - Date the messages were sent
            - Format: yyyyMMdd(Example: 20191231)
            - Timezone: UTC+9
            </param>
            <returns>
            <see cref="T:Line.Messaging.NumberOfSentMessages"/>
            </returns>
        </member>
        <member name="T:Line.Messaging.Liff.LiffClient">
            <summary>
            HTTP Client for the LINE Front-end Framework (LIFF) API
            </summary>
        </member>
        <member name="M:Line.Messaging.Liff.LiffClient.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="channelAccessToken">
            Channel access token
            </param>
            <param name="requestUri">
            Request base URL
            </param>
        </member>
        <member name="M:Line.Messaging.Liff.LiffClient.AddLiffAppAsync(Line.Messaging.Liff.ViewType,System.String)">
            <summary>
            Adds an app to LIFF. You can add up to 10 LIFF apps on one channel.
            </summary>
            <param name="viewType">
            Size of the LIFF app view. Specify one of the following values
            </param>
            <param name="url">
            URL of the LIFF app. Must start with HTTPS.    
            </param>
            <returns>
            LIFF app ID
            </returns>
        </member>
        <member name="M:Line.Messaging.Liff.LiffClient.UpdateLiffAppAsync(System.String,Line.Messaging.Liff.ViewType,System.String)">
            <summary>
            Updates LIFF app settings.
            </summary>
            <param name="liffId">ID of the LIFF app to be updated</param>
            <param name="viewType">
            Size of the LIFF app view. Specify one of the following values
            </param>
            <param name="url">
            URL of the LIFF app. Must start with HTTPS.    
            </param>
        </member>
        <member name="M:Line.Messaging.Liff.LiffClient.GetAllLiffAppAsync">
            <summary>
            Gets information on all the LIFF apps registered in the channel.
            </summary>
            <returns>A JSON object with the following properties.</returns>
        </member>
        <member name="M:Line.Messaging.Liff.LiffClient.DeleteLiffAppAsync(System.String)">
            <summary>
            Deletes a LIFF app.
            </summary>
            <param name="liffId">ID of the LIFF app to be deleted</param>
        </member>
        <member name="T:Line.Messaging.Liff.View">
            <summary>
            View object which contains the URL and view size of the LIFF app.
            </summary>
        </member>
        <member name="P:Line.Messaging.Liff.View.Type">
            <summary>
            Size of the LIFF app view. Specify one of the following values
            </summary>
        </member>
        <member name="P:Line.Messaging.Liff.View.Url">
            <summary>
            URL of the LIFF app. Must start with HTTPS.
            </summary>
        </member>
        <member name="M:Line.Messaging.Liff.View.#ctor(Line.Messaging.Liff.ViewType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="type">
            Size of the LIFF app view. Specify one of the following values
            </param>
            <param name="url">
            URL of the LIFF app. Must start with HTTPS.
            </param>
        </member>
        <member name="T:Line.Messaging.Liff.ViewType">
            <summary>
            Size of the LIFF app view. Specify one of the following values
            </summary>
        </member>
        <member name="F:Line.Messaging.Liff.ViewType.Compact">
            <summary>
            50% of the screen height of the device. This size can be specified only for the chat screen.
            </summary>
        </member>
        <member name="F:Line.Messaging.Liff.ViewType.Tall">
            <summary>
            80% of the screen height of the device. This size can be specified only for the chat screen.
            </summary>
        </member>
        <member name="F:Line.Messaging.Liff.ViewType.Full">
            <summary>
            100% of the screen height of the device. This size can be specified for any screens in the LINE app. 
            </summary>
        </member>
        <member name="T:Line.Messaging.LineMessagingClient">
            <summary>
            LINE Messaging API client, which handles request/response to LINE server.
            </summary>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.#ctor(System.String,System.String)">
            <summary>
            Constructor 
            </summary>
            <param name="channelAccessToken">ChannelAccessToken</param>
            <param name="uri">Request URI</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.IssueChannelAccessTokenAsync(System.Net.Http.HttpClient,System.String,System.String,System.String)">
            <summary>
            Issues a short-lived channel access token. 
            Up to 30 tokens can be issued. If the maximum is exceeded, existing channel access tokens will be revoked in the order of when they were first issued.
            https://developers.line.me/en/docs/messaging-api/reference/#oauth
            </summary>
            <param name="httpClient">HttpClient</param>
            <param name="channelId">ChannelId</param>
            <param name="channelAccessToken">ChannelAccessToken</param>
            <param name="uri">URI</param>
            <returns>ChannelAccessToken</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.RevokeChannelAccessTokenAsync(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Revokes a channel access token.
            https://developers.line.me/en/docs/messaging-api/reference/#revoke-channel-access-token
            </summary>
            <param name="httpClient">HttpClient</param>
            <param name="channelAccessToken">ChannelAccessToken</param>
            <param name="uri">URI</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.CreateAsync(System.String,System.String,System.String)">
            <summary>
            Instantiate LineMessagingClient by using OAuth.
            https://developers.line.me/en/docs/messaging-api/reference/#oauth
            </summary>
            <param name="channelId">ChannelId</param>
            <param name="channelSecret">ChannelSecret</param>
            <param name="uri">URI</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.ReplyMessageAsync(System.String,System.Collections.Generic.IList{Line.Messaging.ISendMessage})">
            <summary>
            Respond to events from users, groups, and rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-reply-message
            </summary>
            <param name="replyToken">ReplyToken</param>
            <param name="messages">Reply messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.ReplyMessageAsync(System.String,System.String[])">
            <summary>
            Respond to events from users, groups, and rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-reply-message
            </summary>
            <param name="replyToken">ReplyToken</param>
            <param name="messages">Reply Text messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.ReplyMessageWithJsonAsync(System.String,System.String[])">
            <summary>
            Respond to events from users, groups, and rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-reply-message
            </summary>
            <param name="replyToken">ReplyToken</param>
            <param name="messages">Set reply messages with Json string.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.PushMessageAsync(System.String,System.Collections.Generic.IList{Line.Messaging.ISendMessage})">
            <summary>
            Send messages to a user, group, or room at any time.
            Note: Use of push messages are limited to certain plans.
            </summary>
            <param name="to">ID of the receiver</param>
            <param name="messages">Reply messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.PushMessageWithJsonAsync(System.String,System.String[])">
            <summary>
            Send messages to a user, group, or room at any time.
            Note: Use of push messages are limited to certain plans.
            </summary>
            <param name="to">ID of the receiver</param>
            <param name="messages">Set reply messages with Json string.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.PushMessageAsync(System.String,System.String[])">
            <summary>
            Send text messages to a user, group, or room at any time.
            Note: Use of push messages are limited to certain plans.
            </summary>
            <param name="to">ID of the receiver</param>
            <param name="messages">Reply text messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.MultiCastMessageAsync(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Line.Messaging.ISendMessage})">
            <summary>
            Send push messages to multiple users at any time.
            Only available for plans which support push messages. Messages cannot be sent to groups or rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-multicast-messages
            </summary>
            <param name="to">IDs of the receivers. Max: 150 users</param>
            <param name="messages">Reply messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.MultiCastMessageWithJsonAsync(System.Collections.Generic.IList{System.String},System.String[])">
            <summary>
            Send push messages to multiple users at any time.
            Only available for plans which support push messages. Messages cannot be sent to groups or rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-multicast-messages
            </summary>
            <param name="to">IDs of the receivers. Max: 150 users</param>
            <param name="messages">Set reply messages with Json string.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.MultiCastMessageAsync(System.Collections.Generic.IList{System.String},System.String[])">
            <summary>
            Send push text messages to multiple users at any time.
            Only available for plans which support push messages. Messages cannot be sent to groups or rooms
            https://developers.line.me/en/docs/messaging-api/reference/#send-multicast-messages
            </summary>
            <param name="to">IDs of the receivers. Max: 150 users</param>
            <param name="messages">Reply text messages. Up to 5 messages.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetContentStreamAsync(System.String)">
            <summary>
            Retrieve image, video, and audio data sent by users as Stream
            https://developers.line.me/en/docs/messaging-api/reference/#get-content
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Content as ContentStream</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetContentBytesAsync(System.String)">
            <summary>
            Retrieve image, video, and audio data sent by users as byte array
            https://developers.line.me/en/docs/messaging-api/reference/#get-content
            </summary>
            <param name="messageId">Message ID</param>
            <returns>Content as byte array</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetUserProfileAsync(System.String)">
            <summary>
            Get user profile information.
            https://developers.line.me/en/docs/messaging-api/reference/#get-profile
            </summary>
            <param name="userId">User ID</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetGroupMemberProfileAsync(System.String,System.String)">
            <summary>
            Gets the user profile of a member of a group that the bot is in. This includes user profiles of users who have not added the bot as a friend or have blocked the bot.
            Use the group ID and user ID returned in the source object of webhook event objects. Do not use the LINE ID used in the LINE app. 
            https://developers.line.me/en/docs/messaging-api/reference/#get-group-member-profile
            </summary>
            <param name="groupId">Identifier of the group</param>
            <param name="userId">Identifier of the user</param>
            <returns>User Profile</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetGroupMemberIdsAsync(System.String,System.String)">
            <summary>
            Gets the user IDs of the members of a group that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            This feature is only available for LINE@ Approved accounts or official accounts.
            Use the group Id returned in the source object of webhook event objects. 
            Users who have not agreed to the Official Accounts Terms of Use are not included in memberIds. There is no fixed number of memberIds. 
            https://developers.line.me/en/docs/messaging-api/reference/#get-group-member-user-ids
            </summary>
            <param name="groupId">Identifier of the group</param>
            <param name="continuationToken">ContinuationToken</param>
            <returns>GroupMemberIds</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetGroupMemberProfilesAsync(System.String)">
            <summary>
            Gets the user profiles of the members of a group that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            Use the group Id returned in the source object of webhook event objects. 
            This feature is only available for LINE@ Approved accounts or official accounts
            </summary>
            <param name="groupId">Identifier of the group</param>
            <returns>List of UserProfile</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.LeaveFromGroupAsync(System.String)">
            <summary>
            Leave a group.
            Use the ID that is returned via webhook from the source group. 
            https://developers.line.me/en/docs/messaging-api/reference/#leave-group
            </summary>
            <param name="groupId">Group ID</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetRoomMemberProfileAsync(System.String,System.String)">
            <summary>
            Gets the user profile of a member of a room that the bot is in. This includes user profiles of users who have not added the bot as a friend or have blocked the bot.
            Use the room ID and user ID returned in the source object of webhook event objects. Do not use the LINE ID used in the LINE app
            </summary>
            <param name="roomId">Identifier of the room</param>
            <param name="userId">Identifier of the user</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetRoomMemberIdsAsync(System.String,System.String)">
            <summary>
            Gets the user IDs of the members of a room that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            Use the room ID returned in the source object of webhook event objects. 
            This feature is only available for LINE@ Approved accounts or official accounts.
            https://developers.line.me/en/docs/messaging-api/reference/#get-room-member-user-ids
            </summary>
            <param name="roomId">Identifier of the room</param>
            <param name="continuationToken">ContinuationToken</param>
            <returns>GroupMemberIds</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetRoomMemberProfilesAsync(System.String)">
            <summary>
            Gets the user profiles of the members of a room that the bot is in. This includes the user IDs of users who have not added the bot as a friend or has blocked the bot.
            Use the room ID returned in the source object of webhook event objects. 
            This feature is only available for LINE@ Approved accounts or official accounts.
            </summary>
            <param name="roomId">Identifier of the room</param>
            <returns>List of UserProfiles</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.LeaveFromRoomAsync(System.String)">
            <summary>
            Leave a room.
            Use the ID that is returned via webhook from the source room. 
            </summary>
            <param name="roomId">Room ID</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetRichMenuAsync(System.String)">
            <summary>
            Gets a rich menu via a rich menu ID.
            https://developers.line.me/en/docs/messaging-api/reference/#get-rich-menu
            </summary>
            <param name="richMenuId">ID of an uploaded rich menu</param>
            <returns>RichMenu</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.CreateRichMenuAsync(Line.Messaging.RichMenu)">
            <summary>
            Creates a rich menu. 
            Note: You must upload a rich menu image and link the rich menu to a user for the rich menu to be displayed.You can create up to 10 rich menus for one bot.
            The rich menu represented as a rich menu object.
            https://developers.line.me/en/docs/messaging-api/reference/#create-rich-menu
            </summary>
            <param name="richMenu">RichMenu</param>
            <returns>RichMenu Id</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.DeleteRichMenuAsync(System.String)">
            <summary>
            Deletes a rich menu.
            https://developers.line.me/en/docs/messaging-api/reference/#delete-rich-menu
            </summary>
            <param name="richMenuId">RichMenu Id</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetRichMenuIdOfUserAsync(System.String)">
            <summary>
            Gets the ID of the rich menu linked to a user.
            https://developers.line.me/en/docs/messaging-api/reference/#get-rich-menu-id-of-user
            </summary>
            <param name="userId">ID of the user</param>
            <returns>RichMenu Id</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.SetDefaultRichMenuAsync(System.String)">
            <summary>
            Sets a default ritch menu
            </summary>
            <param name="richMenuId">
            ID of an uploaded rich menu
            </param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.LinkRichMenuToUserAsync(System.String,System.String)">
            <summary>
            Links a rich menu to a user.
            Note: Only one rich menu can be linked to a user at one time.
            https://developers.line.me/en/docs/messaging-api/reference/#link-rich-menu-to-user
            </summary>
            <param name="userId">ID of the user</param>
            <param name="richMenuId">ID of an uploaded rich menu</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.UnLinkRichMenuFromUserAsync(System.String)">
            <summary>
            Unlinks a rich menu from a user.
            https://developers.line.me/en/docs/messaging-api/reference/#unlink-rich-menu-from-user
            </summary>
            <param name="userId">ID of the user</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.DownloadRichMenuImageAsync(System.String)">
            <summary>
            Downloads an image associated with a rich menu.
            https://developers.line.me/en/docs/messaging-api/reference/#download-rich-menu-image
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <returns>Image as ContentStream</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.UploadRichMenuJpegImageAsync(System.IO.Stream,System.String)">
            <summary>
            Uploads and attaches a jpeg image to a rich menu.
            Images must have one of the following resolutions: 2500x1686, 2500x843. 
            You cannot replace an image attached to a rich menu.To update your rich menu image, create a new rich menu object and upload another image.
            https://developers.line.me/en/docs/messaging-api/reference/#upload-rich-menu-image
            </summary>
            <param name="stream">Jpeg image for the rich menu</param>
            <param name="richMenuId">The ID of the rich menu to attach the image to.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.UploadRichMenuPngImageAsync(System.IO.Stream,System.String)">
            <summary>
            Uploads and attaches a png image to a rich menu.
            Images must have one of the following resolutions: 2500x1686, 2500x843. 
            You cannot replace an image attached to a rich menu.To update your rich menu image, create a new rich menu object and upload another image.
            https://developers.line.me/en/docs/messaging-api/reference/#upload-rich-menu-image
            </summary>
            <param name="stream">Png image for the rich menu</param>
            <param name="richMenuId">The ID of the rich menu to attach the image to.</param>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetRichMenuListAsync">
            <summary>
            Gets a list of all uploaded rich menus.
            https://developers.line.me/en/docs/messaging-api/reference/#get-rich-menu-list
            </summary>
            <returns>List of ResponseRichMenu</returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.IssueLinkTokenAsync(System.String)">
            <summary>
            Issues a link token used for the account link feature.
            <para>https://developers.line.me/en/docs/messaging-api/linking-accounts</para>
            </summary>
            <param name="userId">
            User ID for the LINE account to be linked. Found in the source object of account link event objects. Do not use the LINE ID used in the LINE app.
            </param>
            <returns>
            Returns the status code 200 and a link token. Link tokens are valid for 10 minutes and can only be used once.
            Note: The validity period may change without notice.
            </returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetNumberOfSentReplyMessagesAsync(System.DateTime)">
            <summary>
            Gets the number of messages sent with the /bot/message/reply endpoint.
            The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.
            </summary>
            <param name="date">
            - Date the messages were sent
            - Format: yyyyMMdd(Example: 20191231)
            - Timezone: UTC+9
            </param>
            <returns>
            <see cref="T:Line.Messaging.NumberOfSentMessages"/>
            </returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetNumberOfSentPushMessagesAsync(System.DateTime)">
             <summary>
             Gets the number of messages sent with the /bot/message/push endpoint.
             The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.
            </summary>
             <param name="date">
             - Date the messages were sent
             - Format: yyyyMMdd(Example: 20191231)
             - Timezone: UTC+9
             </param>
             <returns>
             <see cref="T:Line.Messaging.NumberOfSentMessages"/>
             </returns>
        </member>
        <member name="M:Line.Messaging.LineMessagingClient.GetNumberOfSentMulticastMessagesAsync(System.DateTime)">
            <summary>
            Gets the number of messages sent with the /bot/message/push endpoint.
            The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.
            </summary>
            <param name="date">
            - Date the messages were sent
            - Format: yyyyMMdd(Example: 20191231)
            - Timezone: UTC+9
            </param>
            <returns>
            <see cref="T:Line.Messaging.NumberOfSentMessages"/>
            </returns>
        </member>
        <member name="T:Line.Messaging.ChannelAccessToken">
            <summary>
            Short-lived channel access token that is valid for 30 days. 
            https://developers.line.me/en/docs/messaging-api/reference/#issue-channel-access-token
            </summary>
        </member>
        <member name="P:Line.Messaging.ChannelAccessToken.AccessToken">
            <summary>
            Short-lived channel access token. Valid for 30 days.
            Note: Channel access tokens cannot be refreshed
            </summary>
        </member>
        <member name="P:Line.Messaging.ChannelAccessToken.ExpiresIn">
            <summary>
            Time until channel access token expires in seconds from time the token is issued
            </summary>
        </member>
        <member name="P:Line.Messaging.ChannelAccessToken.TokenType">
            <summary>
            Bearer
            </summary>
        </member>
        <member name="T:Line.Messaging.ImagemapSize">
            <summary>
            Image size. 
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapSize.RichMenuLong">
            <summary>
            Default rich menu size
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapSize.RichMenuShort">
            <summary>
            Half rich menu size.
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapSize.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapSize.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="T:Line.Messaging.GroupMemberIds">
            <summary>
            Response from Get group member user IDs API
            </summary>
        </member>
        <member name="P:Line.Messaging.GroupMemberIds.MemberIds">
            <summary>
            List of user IDs of the members in the group.
            Max: 100 user IDs
            </summary>
        </member>
        <member name="P:Line.Messaging.GroupMemberIds.Next">
            <summary>
            continuationToken
            Only returned when there are more user IDs remaining in memberIds
            </summary>
        </member>
        <member name="P:Line.Messaging.NumberOfSentMessages.Status">
            <summary>
            Status of the counting process. One of the following values is returned:<para>
            ready: You can get the number of messages.</para><para>
            unready: The message counting process for the date specified in date has not been completed yet.Retry your request later.Normally, the counting process is completed within the next day.</para><para>
            out_of_service: The date specified in date is earlier than March 31, 2018, when the operation of the counting system started.</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.NumberOfSentMessages.Success">
            <summary>
            The number of messages sent with the Messaging API on the date specified in date. The response has this property only when the value of status is ready.
            </summary>
        </member>
        <member name="M:Line.Messaging.NumberOfSentMessages.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:Line.Messaging.UserProfile">
            <summary>
            Response from Get User Profile API. 
            https://developers.line.me/en/docs/messaging-api/reference/#get-profile
            </summary>
        </member>
        <member name="P:Line.Messaging.UserProfile.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:Line.Messaging.UserProfile.UserId">
            <summary>
            User ID
            </summary>
        </member>
        <member name="P:Line.Messaging.UserProfile.PictureUrl">
            <summary>
            Image URL
            </summary>
        </member>
        <member name="P:Line.Messaging.UserProfile.StatusMessage">
            <summary>
            Status message
            </summary>
        </member>
        <member name="T:Line.Messaging.LineSchemeUrl">
            <summary>
            Provide URLs of the LINE URL scheme.
            <para>https://developers.line.me/en/docs/messaging-api/using-line-url-scheme/</para> 
            </summary>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCameraUrl">
            <summary>
            Opens the camera screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>z
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCameraUriTemplateAction(System.String)">
            <summary>
            Opens the camera screen.
            </summary>
            <param name="label">Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCameraRollSingleUrl">
            <summary>
            Opens the "Camera Roll" screen where users can select one image to share in the chat.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCameraRollSingleUriTemplateAction(System.String)">
            <summary>
            Opens the "Camera Roll" screen where users can select one image to share in the chat.
            </summary>
            <param name="label">Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCameraRollMultiUrl">
            <summary>
            Opens the "Camera Roll" screen where users can select multiple images to share in the chat.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCameraRollMultiUriTemplateAction(System.String)">
            <summary>
            Opens the "Camera Roll" screen where users can select multiple images to share in the chat.
            </summary>
            <param name="label">Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetLocationUrl">
             <summary>
             Opens the "Location" screen. Users can share the current location or drop a pin on the map to select the location they want to share.
             </summary>
             <para>
             Note: This scheme is only supported in one-on-one chats between a user and a bot(LINE@ account). 
             Not supported on external apps or other types of LINE chats.
            </para>
             <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetLocationUriTemplateAction(System.String)">
            <summary>
            Opens the "Location" screen. Users can share the current location or drop a pin on the map to select the location they want to share.
            </summary>
            <para>
            Note: This scheme is only supported in one-on-one chats between a user and a bot(LINE@ account). 
            Not supported on external apps or other types of LINE chats.
            </para>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetTiPUrl(System.String)">
            <summary>
            Opens one of the following screens depending on the user's friendship status with the bot.<para>
            Friend of bot: Opens the chat with the bot.</para><para>
            Not a friend or blocked by user: Opens the "Add friend" screen for your bot.</para>
            </summary>
            <para>Line://ti/p/{LINE_Id}</para>
            <param name="lineId">
            Find the LINE ID of your bot on the LINE@ Manager. Make sure you include the "@" symbol in the LINE ID.
            </param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetTiPUriTemplateAction(System.String,System.String)">
            <summary>
            Opens one of the following screens depending on the user's friendship status with the bot.<para>
            Friend of bot: Opens the chat with the bot.</para><para>
            Not a friend or blocked by user: Opens the "Add friend" screen for your bot.</para>
            </summary>
            <param name="lineId">
            Find the LINE ID of your bot on the LINE@ Manager. Make sure you include the "@" symbol in the LINE ID.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetRecommendOAUrl(System.String)">
            <summary>
            Opens the "Share with" screen where users can select friends, groups, or chats to share a link to your bot.
            </summary>
            <param name="lineId">
            Find the LINE ID of your bot on the LINE@ Manager. Make sure you include the "@" symbol in the LINE ID.
            </param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetRemommendOAUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "Share with" screen where users can select friends, groups, or chats to share a link to your bot.
            </summary>
            <param name="lineId">
            Find the LINE ID of your bot on the LINE@ Manager. Make sure you include the "@" symbol in the LINE ID.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetHomePublicMainUrl(System.String)">
            <summary>
            Opens the Timeline screen for your bot.
            </summary>
            <param name="lineIdWithoutAt">
            Do not include the "@" symbol in the LINE ID.Find the LINE ID of your bot on the LINE@ Manager.
            </param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetHomePublicMainUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the Timeline screen for your bot.
            </summary>
            <param name="lineIdWithoutAt">
            Do not include the "@" symbol in the LINE ID.Find the LINE ID of your bot on the LINE@ Manager.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetHomePublicProfileUrl(System.String)">
            <summary>
            Opens the account page for your bot.
            </summary>
            <param name="lineIdWithoutAt">
            Do not include the "@" symbol in the LINE ID.Find the LINE ID of your bot on the LINE@ Manager.
            </param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetHomePublicProfileUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the account page for your bot.
            </summary>
            <param name="lineIdWithoutAt">
            Do not include the "@" symbol in the LINE ID.Find the LINE ID of your bot on the LINE@ Manager.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetHomePublicPostUrl(System.String,System.String)">
            <summary>
            Opens a specific Timeline post for your bot. 
            You can find the post ID of individual posts in the "Timeline (Home)" section of the LINE@ Manager.
            </summary>
            <param name="lineIdWithoutAt">
            Do not include the "@" symbol in the LINE ID.Find the LINE ID of your bot on the LINE@ Manager.
            </param>
            <param name="postId">post ID</param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetHomePublicPostUriTemplateAction(System.String,System.String,System.String)">
            <summary>
            Opens a specific Timeline post for your bot. 
            You can find the post ID of individual posts in the "Timeline (Home)" section of the LINE@ Manager.
            </summary>
            <param name="lineIdWithoutAt">
            Do not include the "@" symbol in the LINE ID.Find the LINE ID of your bot on the LINE@ Manager.
            </param>
            <param name="postId">post ID</param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetMsgTextUrl(System.String)">
            <summary>
            Opens the "Share with" screen where users can select friends, groups, or chats to send a preset text message.<para> 
            Users can also post the message as a note in a chat or post the message to Timeline.</para>
            </summary>
            <param name="textMessage"></param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetMsgTextUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "Share with" screen where users can select friends, groups, or chats to send a preset text message.<para> 
            Users can also post the message as a note in a chat or post the message to Timeline.</para>
            </summary>
            <param name="textMessage">Text message</param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetOAMessageUrl(System.String,System.String)">
            <summary>
            Opens a chat screen with the bot account with a preset text message that the user can send to your bot.
            </summary>
            <param name="lineId">
            Find the LINE ID of your bot on the LINE@ Manager.Make sure you include the "@" symbol in the LINE ID.
            </param>
            <param name="textMessage">Text message</param>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetOAMessageUriTemplateAction(System.String,System.String,System.String)">
            <summary>
            Opens a chat screen with the bot account with a preset text message that the user can send to your bot.
            </summary>
            <param name="lineId">
            Find the LINE ID of your bot on the LINE@ Manager.Make sure you include the "@" symbol in the LINE ID.
            </param>
            <param name="textMessage">Text message</param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetProfileUrl">
            <summary>
            Opens the "My profile" screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetProfileUriTemplateAction(System.String)">
            <summary>
            Opens the "My profile" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetProfileSetIdUrl">
            <summary>
            Opens the "LINE ID" screen where users can set a LINE ID if they have not already done so.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetProfileSetIdUriTemplateAction(System.String)">
            <summary>
            Opens the "LINE ID" screen where users can set a LINE ID if they have not already done so.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetChatUrl">
            <summary>
            Opens the "Chats" screen. 
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetChatUriTemplateAction(System.String)">
            <summary>
            Opens the "Chats" screen. 
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetTimelineUrl">
            <summary>
            Opens the "Timeline" screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetTimelineUriTemplateAction(System.String)">
            <summary>
            Opens the "Timeline" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetMoreUrl">
            <summary>
            Opens the More screen. This is the screen that is opened when the tab on the furthest right is tapped. 
            The More tab may be represented by either the "More" label or the "..." icon depending on the user's theme.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetMoreUriTemplateAction(System.String)">
            <summary>
            Opens the More screen. This is the screen that is opened when the tab on the furthest right is tapped. <para>
            The More tab may be represented by either the "More" label or the "..." icon depending on the user's theme.</para>
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetAddFriendsUrl">
            <summary>
            Opens the "Add friends" screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetAddFriendsUriTemplateAction(System.String)">
            <summary>
            Opens the "Add friends" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetOfficialAccountsUrl">
            <summary>
            Opens the "Official Accounts" screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetOfficialAccountsUriTemplateAction(System.String)">
            <summary>
            Opens the "Official Accounts" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsUrl">
            <summary>
            Opens the "Settings" screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "Settings" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsAccountUrl">
            <summary>
            Opens the "Account" settings screen. Displays the user's LINE account information.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsAccountUriTemplateAction(System.String)">
            <summary>
            Opens the "Account" settings screen. Displays the user's LINE account information.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetConnectedAppsUrl">
            <summary>
            Opens the "Authorized apps" screen in the "Account" settings screen.<para> 
            Users can see the permissions granted to authorized apps and deauthorize apps from this screen.</para>
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetConnectedAppsUriTemplateAction(System.String)">
            <summary>
            Opens the "Authorized apps" screen in the "Account" settings screen.<para> 
            Users can see the permissions granted to authorized apps and deauthorize apps from this screen.</para>
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetConnectedDevicesUrl">
            <summary>
            Opens the "Devices" screen in the "Account" settings screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetConnectedDevicesUriTemplateAction(System.String)">
            <summary>
            Opens the "Devices" screen in the "Account" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsPrivacyUrl">
            <summary>
            Opens the "Privacy" screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsPrivacyUriTemplateAction(System.String)">
            <summary>
            Opens the "Privacy" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsAddressBooKSyncUrl">
            <summary>
            Opens the "Friends" settings screen.
            </summary>
            <returns>String of LINE Scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsAddressBooKSyncUriTemplateAction(System.String)">
            <summary>
            Opens the "Friends" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsStickerUrl">
            <summary>
            Opens the "Stickers" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsStickerUriTemplateAction(System.String)">
            <summary>
            Opens the "Stickers" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetStickerShopMyStickerUrl">
            <summary>
            Opens the "My Stickers" screen in the "Stickers" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetStickerShopMyStickerUriTemplateAction(System.String)">
            <summary>
            Opens the "My Stickers" screen in the "Stickers" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsThemeIosUrl">
            <summary>
            (For iOS) Opens the "Themes" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsThemeIosUriTemplateAction(System.String)">
            <summary>
            (For Android) Opens the "Themes" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsThemeAndroidUrl">
            <summary>
            (Android only) Opens the "Themes" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsThemeAndroidUriTemplateAction(System.String)">
            <summary>
            (Android only) Opens the "Themes" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetThemeSettingsUrl">
            <summary>
            Opens the "My Themes" screen in the "Themes" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetThemeSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "My Themes" screen in the "Themes" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetNotificationsServiceDetailUrl">
            <summary>
            Opens the "Authorized apps" screen in the "Notification" settings. 
            Users can configure notification settings for authorized apps in this screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetNotificationsServiceDetailUriTemplateAction(System.String)">
            <summary>
            Opens the "Authorized apps" screen in the "Notification" settings. 
            Users can configure notification settings for authorized apps in this screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsChatSettingsUrl">
            <summary>
            Opens the "Chats" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsChatSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "Chats" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSuggestSettingsUrl">
            <summary>
            Opens the "Display suggestions" settings screen. This screen is in the "Chats" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSuggestSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "Display suggestions" settings screen. This screen is in the "Chats" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsCallSettingsUrl">
            <summary>
            Opens the "Calls" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsCallSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "Calls" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsTimelineSettingsUrl">
            <summary>
            Opens the "Timeline" settings screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSettingsTimelineSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "Timeline" settings screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerDetailUrl(System.String)">
            <summary>
            Opens the "Sticker set info" screen for a specified sticker set.
            </summary>
            <param name="packageId">
            Find the "package ID" in the URL of sticker set pages in the "Official stickers" section of the LINE STORE.
            </param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerDetailUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "Sticker set info" screen for a specified sticker set.
            </summary>
            <param name="packageId">
            Find the "package ID" in the URL of sticker set pages in the "Official stickers" section of the LINE STORE.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopCategoryUrl(System.String)">
            <summary>
            Opens the "RANK" tab for a specified category. 
            Find the "category ID" in the URL of category pages in the "Official stickers" section of the LINE STORE.
            </summary>
            <param name="categoryId"></param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopCategoryUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "RANK" tab for a specified category. 
            Find the "category ID" in the URL of category pages in the "Official stickers" section of the LINE STORE.
            </summary>
            <param name="categoryId"></param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerAuthorUrl(System.String)">
            <summary>
            Opens a list of sticker sets from a specified author.
            </summary>
            <param name="authorId">
            Find the "author ID" in the URL of author pages in the "Official stickers" section of the LINE STORE.
            </param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerAuthorUriTemplateAction(System.String,System.String)">
            <summary>
            Opens a list of sticker sets from a specified author.
            </summary>
            <param name="authorId">
            Find the "author ID" in the URL of author pages in the "Official stickers" section of the LINE STORE.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetStickerShopUrl">
            <summary>
            Opens the "HOME" tab in the "Sticker Shop" screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetStickerShopUriTemplateAction(System.String)">
            <summary>
            Opens the "HOME" tab in the "Sticker Shop" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerNewUrl">
            <summary>
            Opens the "NEW" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerNewUriTemplateAction(System.String)">
            <summary>
            Opens the "NEW" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStikerHotUrl">
            <summary>
            Opens the "RANK" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStikerHotUriTemplateAction(System.String)">
            <summary>
            Opens the "RANK" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerEventUrl">
            <summary>
            Opens the "FREE" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerEventUriTemplateAction(System.String)">
            <summary>
            Opens the "FREE" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerCategoryUrl">
            <summary>
            Opens the "CATEGORIES" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopStickerCategoryUriTemplateAction(System.String)">
            <summary>
            Opens the "CATEGORIES" tab in the "Sticker Shop" screen.Note: Not supported on Android.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSStickerUrl(System.String)">
            <summary>
            Opens the "Sticker set info" screen for a specified creators' sticker set. 
            </summary>
            <param name="packageId">
            Find the "package ID" in the URL of sticker set pages in the "Creators' stickers" section of the LINE STORE.
            </param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSStickerUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "Sticker set info" screen for a specified creators' sticker set. 
            </summary>
            <param name="packageId">
            Find the "package ID" in the URL of sticker set pages in the "Creators' stickers" section of the LINE STORE.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSShopStickerAuthorUrl(System.String)">
            <summary>
            Opens a list of creators' sticker sets from a specified author. 
            </summary>
            <param name="authorId">
            Find the "author ID" in the URL of author pages in the "Creators' stickers" section of the LINE STORE.
            </param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSShopStickerAuthorUriTemplateAction(System.String,System.String)">
            <summary>
            Opens a list of creators' sticker sets from a specified author. 
            </summary>
            <param name="authorId">
            Find the "author ID" in the URL of author pages in the "Creators' stickers" section of the LINE STORE.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetShopThemeDetailUrl(System.String)">
            <summary>
            Opens the "Theme info" screen for a specified official theme in the Theme Shop. 
            </summary>
            <param name="productId">
            Find the "product ID" in the URL of the theme page in the "Official themes" section of the LINE STORE.
            </param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.ShopThemeDetailUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "Theme info" screen for a specified official theme in the Theme Shop. 
            </summary>
            <param name="productId">
            Find the "product ID" in the URL of the theme page in the "Official themes" section of the LINE STORE.
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSShopThemeDetailUrl(System.String)">
            <summary>
            Opens the "Theme info" screen for a specified creators' theme in the Theme Shop. 
            </summary>
            <param name="productId"></param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetSShopThemeDetailUriTemplateAction(System.String,System.String)">
            <summary>
            Opens the "Theme info" screen for a specified creators' theme in the Theme Shop. 
            </summary>
            <param name="productId"></param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallUrl(System.String,System.String)">
            <summary>
            Opens the "LINE Out" dial pad screen with a preset phone number. 
            </summary>
            <para>
            For example, line://call/81/1022223333 sets the country calling code to "+81" and the local phone number to "1022223333".
            </para>
            <param name="countryCallingCode">
            Specify the country calling code and the phone number as path parameters. Do not include the "+" symbol in the URL. 
            </param>
            <param name="phoneNumber">
            Local phone number
            </param>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallUriTemplateAction(System.String,System.String,System.String)">
            <summary>
            Opens the "LINE Out" dial pad screen with a preset phone number. 
            </summary>
            <para>
            For example, line://call/81/1022223333 sets the country calling code to "+81" and the local phone number to "1022223333".
            </para>
            <param name="countryCallingCode">
            Specify the country calling code and the phone number as path parameters. Do not include the "+" symbol in the URL. 
            </param>
            <param name="phoneNumber">
            Local phone number
            </param>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallsUrl">
            <summary>
            Opens the "Calls" screen of LINE Out.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallsUriTemplateAction(System.String)">
            <summary>
            Opens the "Calls" screen of LINE Out.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallDialpadUrl">
            <summary>
            Opens the "LINE Out" dial pad screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallDialpadUriTemplateAction(System.String)">
            <summary>
            Opens the "LINE Out" dial pad screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallSettingsUrl">
            <summary>
            Opens the "LINE Out Settings" screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallSettingsUriTemplateAction(System.String)">
            <summary>
            Opens the "LINE Out Settings" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallContactsUrl">
            <summary>
            Opens the "Contacts" screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallContactsUriTemplateAction(System.String)">
            <summary>
            Opens the "Contacts" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallSpotUrl">
            <summary>
            Opens the "Spots" screen. The "Spots" screen displays a map where users can search for information on nearby landmarks.
            </summary>
            <para>
            Not supported on Android.
            </para>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallSpotUriTemplateAction(System.String)">
            <summary>
            Opens the "Spots" screen. The "Spots" screen displays a map where users can search for information on nearby landmarks.
            </summary>
            <para>
            Not supported on Android.
            </para>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallRedeemUrl">
            <summary>
            Opens the "Redeem for LINE Out Credit" screen.
            </summary>
            <returns>String of LINE scheme URL</returns>
        </member>
        <member name="M:Line.Messaging.LineSchemeUrl.GetCallRedeemUriTemplateAction(System.String)">
            <summary>
            Opens the "Redeem for LINE Out Credit" screen.
            </summary>
            <param name = "label" > Template action label text</param>
            <returns>URI template action object</returns>
        </member>
        <member name="T:Line.Messaging.CameraRollTemplateAction">
            <summary>
            This action can be configured only with quick reply buttons. When a button associated with this action is tapped, the camera roll screen in the LINE app is opened.
            https://developers.line.me/en/reference/messaging-api/#camera-roll-action
            </summary>
        </member>
        <member name="P:Line.Messaging.CameraRollTemplateAction.Label">
            <summary>
            Label for the action
            Max: 20 characters
            </summary>
        </member>
        <member name="T:Line.Messaging.CameraTemplateAction">
            <summary>
            This action can be configured only with quick reply buttons. When a button associated with this action is tapped, the camera screen in the LINE app is opened.
            https://developers.line.me/en/reference/messaging-api/#camera-action
            </summary>
        </member>
        <member name="P:Line.Messaging.CameraTemplateAction.Label">
            <summary>
            Label for the action
            Max: 20 characters
            </summary>
        </member>
        <member name="T:Line.Messaging.DateTimePickerTemplateAction">
            <summary>
            When a control associated with this action is tapped, a postback event is returned via webhook with the date and time selected by the user from the date and time selection dialog.
            https://developers.line.me/en/docs/messaging-api/reference/#datetime-picker-action
            </summary>
        </member>
        <member name="P:Line.Messaging.DateTimePickerTemplateAction.Label">
            <summary>
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus.Spoken when the accessibility feature is enabled on the client device.Max: 20 characters.Supported on LINE iOS version 8.2.0 and later.
            </summary>
        </member>
        <member name="P:Line.Messaging.DateTimePickerTemplateAction.Data">
            <summary>
            String returned via webhook in the postback.data property of the postback event
            Max: 300 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.DateTimePickerTemplateAction.Mode">
            <summary>
            Action mode
            date: Pick date
            time: Pick time
            datetime: Pick date and time
            </summary>
        </member>
        <member name="P:Line.Messaging.DateTimePickerTemplateAction.Initial">
            <summary>
            Initial value of date or time
            </summary>
        </member>
        <member name="P:Line.Messaging.DateTimePickerTemplateAction.Max">
            <summary>
            Largest date or time value that can be selected.
            Must be greater than the min value.
            </summary>
        </member>
        <member name="P:Line.Messaging.DateTimePickerTemplateAction.Min">
            <summary>
            Smallest date or time value that can be selected.
            Must be less than the max value.
            </summary>
        </member>
        <member name="M:Line.Messaging.DateTimePickerTemplateAction.#ctor(System.String,System.String,Line.Messaging.DateTimePickerMode,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="label">
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus.Spoken when the accessibility feature is enabled on the client device.Max: 20 characters.Supported on LINE iOS version 8.2.0 and later.
            </param>
            <param name="data">
            String returned via webhook in the postback.data property of the postback event
            Max: 300 characters
            </param>
            <param name="mode">
            Action mode
            date: Pick date
            time: Pick time
            datetime: Pick date and time
            </param>
            <param name="initial">
            Initial value of date or time
            </param>
            <param name="min">
            Smallest date or time value that can be selected.
            Must be less than the max value.
            </param>
            <param name="max">
            Largest date or time value that can be selected.
            Must be greater than the min value.
            </param>
        </member>
        <member name="M:Line.Messaging.DateTimePickerTemplateAction.#ctor(System.String,System.String,Line.Messaging.DateTimePickerMode,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Constructor
            </summary>
            <param name="label">
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus.Spoken when the accessibility feature is enabled on the client device.Max: 20 characters.Supported on LINE iOS version 8.2.0 and later.
            </param>
            <param name="data">
            String returned via webhook in the postback.data property of the postback event
            Max: 300 characters
            </param>
            <param name="mode">
            Action mode
            date: Pick date
            time: Pick time
            datetime: Pick date and time
            </param>
            <param name="initial">
            Initial value of date or time
            </param>
            <param name="min">
            Smallest date or time value that can be selected.
            Must be less than the max value.
            </param>
            <param name="max">
            Largest date or time value that can be selected.
            Must be greater than the min value.
            </param>
        </member>
        <member name="T:Line.Messaging.LocationTemplateAction">
            <summary>
            This action can be configured only with quick reply buttons. When a button associated with this action is tapped, the location screen in the LINE app is opened.
            https://developers.line.me/en/reference/messaging-api/#location-action
            </summary>
        </member>
        <member name="P:Line.Messaging.LocationTemplateAction.Label">
            <summary>
            Label for the action
            Max: 20 characters
            </summary>
        </member>
        <member name="T:Line.Messaging.MessageTemplateAction">
            <summary>
            When a control associated with this action is tapped, the string in the text field is sent as a message from the user.
            https://developers.line.me/en/docs/messaging-api/reference/#datetime-picker-action
            </summary>
        </member>
        <member name="P:Line.Messaging.MessageTemplateAction.Label">
            <summary>
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus. Spoken when the accessibility feature is enabled on the client device. Max: 20 characters. Supported on LINE iOS version 8.2.0 and later.
            </summary>
        </member>
        <member name="P:Line.Messaging.MessageTemplateAction.Text">
            <summary>
            Text sent when the action is performed
            Max: 300 characters
            </summary>
        </member>
        <member name="M:Line.Messaging.MessageTemplateAction.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="label">
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus. Spoken when the accessibility feature is enabled on the client device. Max: 20 characters. Supported on LINE iOS version 8.2.0 and later.
            </param>
            <param name="text">
            Text sent when the action is performed
            Max: 300 characters
            </param>
        </member>
        <member name="T:Line.Messaging.PostbackTemplateAction">
            <summary>
            When a control associated with this action is tapped, a postback event is returned via webhook with the specified string in the data field.
            If you have included the text field, the string in the text field is sent as a message from the user.
            https://developers.line.me/en/docs/messaging-api/reference/#postback-action
            </summary>
        </member>
        <member name="P:Line.Messaging.PostbackTemplateAction.Label">
            <summary>
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus. Spoken when the accessibility feature is enabled on the client device. Max: 20 characters. Supported on LINE iOS version 8.2.0 and later.
            </summary>
        </member>
        <member name="P:Line.Messaging.PostbackTemplateAction.Data">
            <summary>
            String returned via webhook in the postback.data property of the postback event
            Max: 300 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.PostbackTemplateAction.Text">
            <summary>
            Deprecated. Text displayed in the chat as a message sent by the user when the action is performed. Returned from the server through a webhook.
            Max: 300 characters
            The displayText and text fields cannot both be used at the same time.
            </summary>
        </member>
        <member name="P:Line.Messaging.PostbackTemplateAction.DisplayText">
            <summary>
            Text displayed in the chat as a message sent by the user when the action is performed.
            Max: 300 characters
            The displayText and text fields cannot both be used at the same time.
            </summary>
        </member>
        <member name="M:Line.Messaging.PostbackTemplateAction.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="label">
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus. Spoken when the accessibility feature is enabled on the client device. Max: 20 characters. Supported on LINE iOS version 8.2.0 and later.
            </param>
            <param name="data">
            String returned via webhook in the postback.data property of the postback event
            Max: 300 characters
            </param>
            <param name="text">
            Text displayed in the chat as a message sent by the user when the action is performed.
            And only when <paramref name="useDisplayText"/> is false, returned from the server through a webhook.
            <para>Max: 300 characters</para>
            </param>
            <param name="useDisplayText">
            If set to true, <paramref name="text"/> parameter is set to DisplayText property.
            (Deprecated) If set to false, <paramref name="text"/> parameter is set to Text property. However text property is deprecated.
            </param>
        </member>
        <member name="T:Line.Messaging.UriTemplateAction">
            <summary>
            When a control associated with this action is tapped, the URI specified in the uri field is opened.
            https://developers.line.me/en/docs/messaging-api/reference/#uri-action
            </summary>
        </member>
        <member name="P:Line.Messaging.UriTemplateAction.Label">
            <summary>
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus. Spoken when the accessibility feature is enabled on the client device. Max: 20 characters. Supported on LINE iOS version 8.2.0 and later.
            </summary>
        </member>
        <member name="P:Line.Messaging.UriTemplateAction.Uri">
            <summary>
            URI opened when the action is performed (Max: 1000 characters)
            Must start with http, https, or tel.
            </summary>
        </member>
        <member name="P:Line.Messaging.UriTemplateAction.AltUri">
            <summary>
            URI opened on LINE for macOS and Windows when the action is performed (Max: 1000 characters) If the altUri.desktop property is set, 
            the uri property is ignored on LINE for macOS and Windows.<para>
            The available schemes are http, https, line, and tel.For more information about the LINE URL scheme, see Using the LINE URL scheme. 
            This property is supported on the following version of LINE.
            LINE 5.12.0 or later for macOS and Windows</para>
            Note: The altUri.desktop property is supported only when you set URI actions in Flex Messages.
            </summary>
        </member>
        <member name="M:Line.Messaging.UriTemplateAction.#ctor(System.String,System.String,Line.Messaging.AltUri)">
            <summary>
            Constructor
            </summary>
            <param name="label">
            Label for the action
            Required for templates other than image carousel.Max: 20 characters
            Optional for image carousel templates.Max: 12 characters.
            Optional for rich menus. Spoken when the accessibility feature is enabled on the client device. Max: 20 characters. Supported on LINE iOS version 8.2.0 and later.
            </param>
            <param name="uri">
            URI opened when the action is performed (Max: 1000 characters)
            Must start with http, https, or tel.
            </param>
            <param name="altUri">
            URI opened on LINE for macOS and Windows when the action is performed (Max: 1000 characters) If the altUri.desktop property is set, 
            the uri property is ignored on LINE for macOS and Windows.<para>
            The available schemes are http, https, line, and tel.For more information about the LINE URL scheme, see Using the LINE URL scheme. 
            This property is supported on the following version of LINE.
            LINE 5.12.0 or later for macOS and Windows</para>
            Note: The altUri.desktop property is supported only when you set URI actions in Flex Messages.
            </param>
        </member>
        <member name="T:Line.Messaging.AudioMessage">
            <summary>
            Audio
            https://developers.line.me/en/docs/messaging-api/reference/#audio
            </summary>
        </member>
        <member name="P:Line.Messaging.AudioMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.AudioMessage.OriginalContentUrl">
            <summary>
            URL of audio file (Max: 1000 characters)
            HTTPS
            m4a
            Less than 1 minute
            Max 10 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.AudioMessage.Duration">
            <summary>
            Length of audio file (milliseconds)
            </summary>
        </member>
        <member name="M:Line.Messaging.AudioMessage.#ctor(System.String,System.Int64,Line.Messaging.QuickReply)">
            <summary>
            Constructor
            </summary>
            <param name="originalContentUrl">
            URL of audio file (Max: 1000 characters)
            HTTPS
            m4a
            Less than 1 minute
            Max 10 MB
            </param>
            <param name="duration">
            Length of audio file (milliseconds)
            </param>
            <param name="quickReply">
            QuickReply
            </param>
        </member>
        <member name="T:Line.Messaging.FlexMessage">
            <summary>
            Template messages are messages with predefined layouts which you can customize. There are four types of templates available that can be used to interact with users through your bot.
            </summary>
        </member>
        <member name="P:Line.Messaging.FlexMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.FlexMessage.Contents">
            <summary>
            Flex Message container object
            </summary>
        </member>
        <member name="P:Line.Messaging.FlexMessage.AltText">
            <summary>
            Alternative text.
            Max: 400 characters
            </summary>
        </member>
        <member name="M:Line.Messaging.FlexMessage.#ctor(System.String)">
             <summary>
             Constructor
             </summary>
             <param name="altText">
             Alternative text.
             Max: 400 characters
            </param>
        </member>
        <member name="P:Line.Messaging.BubbleContainer.Direction">
            <summary>
            Text directionality and the order of components in horizontal boxes in the container. <para>
            Specify one of the following values:
            / ltr: Left to right
            / rtl: Right to left
            , The default value is ltr.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleContainer.Header">
            <summary>
            Header block. Specify a box component.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleContainer.Hero">
            <summary>
            Hero block. Specify an image component.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleContainer.Body">
            <summary>
            Body block. Specify a box component.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleContainer.Footer">
            <summary>
            Footer block. Specify a box component.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleContainer.Styles">
            <summary>
            Style of each block. Specify a bubble style object. For more information, see Objects for the block style.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselContainer.Contents">
            <summary>
            Array of bubble containers. Max: 10 bubbles
            <para>(Required)</para>
            </summary>
        </member>
        <member name="T:Line.Messaging.BoxComponent">
            <summary>
            This is a component that defines the layout of child components. You can also include a box in a box.
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Type">
            <summary>
            Box
            </summary>
        </member>
        <member name="M:Line.Messaging.BoxComponent.#ctor(Line.Messaging.BoxLayout)">
            <summary>
            The placement style of components in this box. Specify one of the following values
            </summary>
            <param name="layout">
            The placement style of components in this box. Specify one of the following values
            </param>
        </member>
        <member name="M:Line.Messaging.BoxComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Layout">
            <summary>
            The placement style of components in this box. Specify one of the following values
            <para>(Required)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Contents">
            <summary>
            Components in this box. Here are the types of components available:<para>
            - When the layout property is horizontal or vertical: Box, button, filler, image, separator, and text components</para><para>
            - When the layout property is baseline: filler, icon, and text components</para>
            <para>(Required)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Flex">
            <summary>
            The ratio of the width or height of this box within the parent box. 
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Spacing">
            <summary>
            Minimum space between components in this box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is none. 
            To override this setting for a specific component, set the margin property of that component.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Margin">
            <summary>
            Minimum space between this box and the previous component in the parent box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is the value of the spacing property of the parent box. 
            If this box is the first component in the parent box, the margin property will be ignored.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BoxComponent.Action">
            <summary>
            Action performed when this box is tapped.
            Specify an action object. This property is supported on the following versions of LINE.<para>
            / LINE for iOS and Android: 8.11.0 and later
            / LINE for Windows and macOS: 5.9.0 and later
            </para>
            </summary>
        </member>
        <member name="T:Line.Messaging.ButtonComponent">
            <summary>
            This component draws a button. When the user taps a button, a specified action is performed.
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Action">
            <summary>
            Action performed when this button is tapped. Specify an action object.
            <para>(Required)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Flex">
            <summary>
            The ratio of the width or height of this component within the parent box. 
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. For more information, see Width and height of components.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Margin">
            <summary>
            Minimum space between this component and the previous component in the parent box.<para> 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing.</para><para> 
            The default value is the value of the spacing property of the parent box. 
            If this component is the first component in the parent box, the margin property will be ignored.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Height">
            <summary>
            Height of the button. You can specify sm or md. The default value is md.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Style">
            <summary>
            Style of the button.<para> 
            Specify one of the following values:
            - link: HTML link style
            - primary: Style for dark color buttons
            - secondary: Style for light color buttons</para>
            The default value is link.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Color">
            <summary>
            Character color when the style property is link. 
            Background color when the style property is primary or secondary. Use a hexadecimal color code.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonComponent.Gravity">
            <summary>
            Vertical alignment style.<para> 
            Specify one of the following values:
            - top: Top-aligned
            - bottom: Bottom-aligned
            - center: Center-aligned</para>
            The default value is top.
            If the layout property of the parent box is baseline, the gravity property will be ignored.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="M:Line.Messaging.ButtonComponent.#ctor(Line.Messaging.ITemplateAction)">
            <summary>
            Constructor
            </summary>
            <param name="action">
            Action performed when this button is tapped. Specify an action object.
            </param>
        </member>
        <member name="M:Line.Messaging.ButtonComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Line.Messaging.FillerComponent">
            <summary>
            This is an invisible component to fill extra space between components.
            </summary>
        </member>
        <member name="P:Line.Messaging.IconComponent.Url">
            <summary>
            Image URL<para>
            Protocol: HTTPS
            / Image format: JPEG or PNG
            / Maximum image size: 240×240 pixels
            / Maximum data size: 1 MB
            </para>
            <para>(Required)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.IconComponent.Margin">
            <summary>
            Minimum space between this component and the previous component in the parent box.<para> 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing.</para><para> 
            The default value is the value of the spacing property of the parent box.
            If this component is the first component in the parent box, the margin property will be ignored.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.IconComponent.Size">
            <summary>
            Maximum size of the icon width. <para>
            You can specify one of the following values: xxs, xs, sm, md, lg, xl, xxl, 3xl, 4xl, or 5xl. 
            The size increases in the order of listing. The default value is md.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.IconComponent.AspectRatio">
            <summary>
            Aspect ratio of the image. 
            Specify in the {width}:{height} format. <para>
            Specify the value of the {width} property and the {height} property in the range from 1 to 100000. However, 
            you cannot set the {height} property to a value that is more than three times the value of the {width} property. </para>
            The default value is 1:1.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="M:Line.Messaging.IconComponent.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="url">
            Image URL<para>
            Protocol: HTTPS
            / Image format: JPEG or PNG
            / Maximum image size: 240×240 pixels
            / Maximum data size: 1 MB
            </para>
            </param>
        </member>
        <member name="M:Line.Messaging.IconComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Line.Messaging.ImageComponent">
            <summary>
            This component draws an image.
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Url">
            <summary>
            Image URL (Required)<para>
            / Protocol: HTTPS
            / Image format: JPEG or PNG
            / Maximum image size: 1024×1024 pixels
            / Maximum data size: 1 MB</para>
            <para>(Required)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Flex">
            <summary>
            The ratio of the width or height of this component within the parent box. <para>
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
            For more information, see Width and height of components.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Margin">
             <summary>
             Minimum space between this component and the previous component in the parent box.<para> 
             You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
             none does not set a space while the other values set a space whose size increases in the order of listing. 
             The default value is the value of the spacing property of the parent box. 
            If this component is the first component in the parent box, the margin property will be ignored.</para>
            <para>(Optional)</para>
             </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Align">
            <summary>
            Horizontal alignment style.<para> 
            Specify one of the following values:
            / start: Left-aligned
            / end: Right-aligned
            / center: Center-aligned
            , The default value is center.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Gravity">
            <summary>
            Vertical alignment style.<para>
            Specify one of the following values:
            / top: Top-aligned
            / bottom: Bottom-aligned
            / center: Center-aligned
            , The default value is top.</para><para>
            If the layout property of the parent box is baseline, the gravity property will be ignored.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Size">
            <summary>
            Maximum size of the image width.<para> 
            You can specify one of the following values: xxs, xs, sm, md, lg, xl, xxl, 3xl, 4xl, 5xl, or full. 
            The size increases in the order of listing. 
            The default value is md.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.AspectRatio">
            <summary>
            Aspect ratio of the image. 
            Specify in the {width}:{height} format. <para>
            Specify the value of the {width} property and the {height} property in the range from 1 to 100000. However, 
            you cannot set the {height} property to a value that is more than three times the value of the {width} property. </para>
            The default value is 1:1.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.AspectMode">
            <summary>
            Style of the image.<para> 
            Specify one of the following values:
            / cover: The image fills the entire drawing area.Parts of the image that do not fit in the drawing area are not displayed.
            / fit: The entire image is displayed in the drawing area.The background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
            The default value is fit.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.BackgroundColor">
            <summary>
            Background color of the image. Use a hexadecimal color code.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageComponent.Action">
            <summary>
            Action performed when this image is tapped. Specify an action object.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="M:Line.Messaging.ImageComponent.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="url">
            Image URL (Required)<para>
            / Protocol: HTTPS
            / Image format: JPEG or PNG
            / Maximum image size: 1024×1024 pixels
            / Maximum data size: 1 MB</para> 
            </param>
        </member>
        <member name="M:Line.Messaging.ImageComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Line.Messaging.SeparatorComponent">
            <summary>
            This component draws a separator between components in the parent box.
            </summary>
        </member>
        <member name="P:Line.Messaging.SeparatorComponent.Margin">
            <summary>
            Minimum space between this component and the previous component in the parent box.<para> 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. 
            The default value is the value of the spacing property of the parent box. 
            If this component is the first component in the parent box, the margin property will be ignored.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.SeparatorComponent.Color">
            <summary>
            Color of the separator. Use a hexadecimal color code.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.SpacerComponent.Size">
            <summary>
            Size of the space.(Required) <para> 
            You can specify one of the following values: xs, sm, md, lg, xl, or xxl. 
            The size increases in the order of listing. The default value is md.</para>
            <para>(Required)</para>
            </summary>
        </member>
        <member name="M:Line.Messaging.SpacerComponent.#ctor(Line.Messaging.ComponentSize)">
            <summary>
            Constructor
            </summary>
            <param name="size">
            /// Size of the space.(Required) <para> 
            You can specify one of the following values: xs, sm, md, lg, xl, or xxl. 
            The size increases in the order of listing. The default value is md.</para>
            </param>
        </member>
        <member name="M:Line.Messaging.SpacerComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Text">
            <summary>
            Text
            <para>(Required)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Flex">
            <summary>
            The ratio of the width or height of this component within the parent box.<para>
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
            For more information, see Width and height of components.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Margin">
            <summary>
            Minimum space between this component and the previous component in the parent box.<para> 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. 
            The default value is the value of the spacing property of the parent box. 
            If this component is the first component in the parent box, the margin property will be ignored.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Size">
            <summary>
            Font size.<para> 
            You can specify one of the following values: xxs, xs, sm, md, lg, xl, xxl, 3xl, 4xl, or 5xl. 
            The size increases in the order of listing. 
            The default value is md.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Align">
            <summary>
            Horizontal alignment style.<para>
            Specify one of the following values:
            / start: Left-aligned
            / end: Right-aligned
            / center: Center-aligned
            , The default value is start.</para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Gravity">
            <summary>
            Vertical alignment style.<para> 
            Specify one of the following values:
            / top: Top-aligned
            / bottom: Bottom-aligned
            / center: Center-aligned
            The default value is top.</para>
            If the layout property of the parent box is baseline, the gravity property will be ignored.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Wrap">
            <summary>
            true to wrap text. The default value is false. If set to true, you can use a new line character (\n) to begin on a new line.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.MaxLines">
            <summary>
            Max number of lines. <para>
            If the text does not fit in the specified number of lines, an ellipsis (…) is displayed at the end of the last line. 
            If set to 0, all the text is displayed. 
            , The default value is 0.</para> 
            This property is supported on the following versions of LINE.
            LINE for iOS and Android: 8.11.0 and later
            LINE for Windows and macOS: 5.9.0 and later
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Weight">
            <summary>
            Font weight. You can specify one of the following values: regular, or bold. Specifying bold makes the font bold. The default value is regular.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Color">
            <summary>
            Font weight. You can specify one of the following values: regular, or bold. Specifying bold makes the font bold. The default value is regular.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.TextComponent.Action">
            <summary>
            Action performed when this text is tapped. Specify an action object.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="M:Line.Messaging.TextComponent.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">Text</param>
        </member>
        <member name="M:Line.Messaging.TextComponent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Line.Messaging.BoxComponentExtensions.AddContents(Line.Messaging.BoxComponent,Line.Messaging.IFlexComponent)">
            <summary>
            Add a flex component to the Box component.
            </summary>
            <param name="self">BoxComponent</param>
            <param name="component">Flex Component</param>
            <returns>BoxComponent</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHeader(Line.Messaging.BubbleContainer,Line.Messaging.BoxComponent)">
            <summary>
            Sets a BoxComponent to the BubbleContainer header
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="header">BoxComponent</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHeader(Line.Messaging.BubbleContainer,Line.Messaging.BoxLayout,System.Nullable{System.Int32},System.Nullable{Line.Messaging.Spacing},System.Nullable{Line.Messaging.Spacing})">
            <summary>
            Sets a BoxComponent to the BubbleContainer header
            </summary>
            <param name="boxLayout">
            The placement style of components in this box. Specify one of the following values
            </param>
            <param name="self">BubbleContainer</param>
            <param name="flex">
            The ratio of the width or height of this box within the parent box. 
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
            </param>
            <param name="spacing">
            Minimum space between components in this box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is none. 
            To override this setting for a specific component, set the margin property of that component.</para>
            </param>
            <param name="margin">
            Minimum space between this box and the previous component in the parent box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is the value of the spacing property of the parent box. 
            If this box is the first component in the parent box, the margin property will be ignored.</para>
            </param>
            <returns>BoxContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.AddHeaderContents(Line.Messaging.BubbleContainer,Line.Messaging.IFlexComponent)">
            <summary>
            Add a flex component to BubbleContainer header
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="component">Flex Conmonent</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetBody(Line.Messaging.BubbleContainer,Line.Messaging.BoxComponent)">
            <summary>
            Sets a BoxComponent to the BubbleContainer body
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="body">Box Component</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetBody(Line.Messaging.BubbleContainer,Line.Messaging.BoxLayout,System.Nullable{System.Int32},System.Nullable{Line.Messaging.Spacing},System.Nullable{Line.Messaging.Spacing})">
            <summary>
            Sets a BoxComponent to the BubbleContainer body
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="boxLayout">
            The placement style of components in this box. Specify one of the following values
            </param>
            <param name="flex">
            The ratio of the width or height of this box within the parent box. 
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
            </param>
            <param name="spacing">
            Minimum space between components in this box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is none. 
            To override this setting for a specific component, set the margin property of that component.</para>
            </param>
            <param name="margin">
            Minimum space between this box and the previous component in the parent box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is the value of the spacing property of the parent box. 
            If this box is the first component in the parent box, the margin property will be ignored.</para>
            </param>
            <returns>BoxContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.AddBodyContents(Line.Messaging.BubbleContainer,Line.Messaging.IFlexComponent)">
            <summary>
            Add a flex component to BubbleContainer body
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="component">Flex Component</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetFooter(Line.Messaging.BubbleContainer,Line.Messaging.BoxComponent)">
            <summary>
            Sets a BoxComponent to the BubbleContainer footer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="footer">BoxComponent</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetFooter(Line.Messaging.BubbleContainer,Line.Messaging.BoxLayout,System.Nullable{System.Int32},System.Nullable{Line.Messaging.Spacing},System.Nullable{Line.Messaging.Spacing})">
            <summary>
            Sets a BoxComponent to the BubbleContainer footer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="boxLayout">
            The placement style of components in this box. Specify one of the following values
            </param>
            <param name="flex">
            The ratio of the width or height of this box within the parent box. 
            The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
            </param>
            <param name="spacing">
            Minimum space between components in this box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is none. 
            To override this setting for a specific component, set the margin property of that component.</para>
            </param>
            <param name="margin">
            Minimum space between this box and the previous component in the parent box. 
            You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
            none does not set a space while the other values set a space whose size increases in the order of listing. <para>
            The default value is the value of the spacing property of the parent box. 
            If this box is the first component in the parent box, the margin property will be ignored.</para>
            </param>
            <returns>BoxContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.AddFooterContents(Line.Messaging.BubbleContainer,Line.Messaging.IFlexComponent)">
            <summary>
            Add a flexComponent to BubbleContainer footer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="component">Flex Comopnent</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHero(Line.Messaging.BubbleContainer,Line.Messaging.ImageComponent)">
            <summary>
            Sets a ImageComponent to the BobbleContainer hero 
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="hero">
            ImageComponent
            </param>
            <para>BubbleContainer</para>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHero(Line.Messaging.BubbleContainer,System.String,System.Nullable{System.Int32},System.Nullable{Line.Messaging.Spacing},System.Nullable{Line.Messaging.Align},System.Nullable{Line.Messaging.Gravity},System.Nullable{Line.Messaging.ComponentSize},Line.Messaging.AspectRatio,System.Nullable{Line.Messaging.AspectMode},System.String)">
             <summary>
             Sets a ImageComponent to the BobbleContainer hero 
             </summary>
             <param name="self">BubbleContainer</param>
             <param name="imageUrl">
             Image URL (Required)<para>
             / Protocol: HTTPS
             / Image format: JPEG or PNG
             / Maximum image size: 1024×1024 pixels
             / Maximum data size: 1 MB</para>
             </param>
             <param name="flex">
             The ratio of the width or height of this component within the parent box. <para>
             The default value for the horizontal parent box is 1, and the default value for the vertical parent box is 0. 
             For more information, see Width and height of components.</para>
             </param>
             <param name="margin">
             Minimum space between this component and the previous component in the parent box.<para> 
             You can specify one of the following values: none, xs, sm, md, lg, xl, or xxl. 
             none does not set a space while the other values set a space whose size increases in the order of listing. 
             The default value is the value of the spacing property of the parent box. 
            If this component is the first component in the parent box, the margin property will be ignored.</para>
             </param>
             <param name="align">
             Horizontal alignment style.<para> 
             Specify one of the following values:
             / start: Left-aligned
             / end: Right-aligned
             / center: Center-aligned
             , The default value is center.</para>
             </param>
             <param name="gravity">
             Vertical alignment style.<para>
             Specify one of the following values:
             / top: Top-aligned
             / bottom: Bottom-aligned
             / center: Center-aligned
             , The default value is top.</para><para>
             If the layout property of the parent box is baseline, the gravity property will be ignored.</para>
             </param>
             <param name="size">
             Maximum size of the image width.<para> 
             You can specify one of the following values: xxs, xs, sm, md, lg, xl, xxl, 3xl, 4xl, 5xl, or full. 
             The size increases in the order of listing. 
             The default value is md.</para>
             </param>
             <param name="aspectRatio">
             Aspect ratio of the image. 
             Specify in the {width}:{height} format. <para>
             Specify the value of the {width} property and the {height} property in the range from 1 to 100000. However, 
             you cannot set the {height} property to a value that is more than three times the value of the {width} property. </para>
             The default value is 1:1.
             </param>
             <param name="aspectMode">
             Style of the image.<para> 
             Specify one of the following values:
             / cover: The image fills the entire drawing area.Parts of the image that do not fit in the drawing area are not displayed.
             / fit: The entire image is displayed in the drawing area.The background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
             The default value is fit.</para>
             </param>
             <param name="backgroundColor">
             Background color of the image. Use a hexadecimal color code.
             </param>
             <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHeroAction(Line.Messaging.BubbleContainer,Line.Messaging.ITemplateAction)">
            <summary>
            Sets a action to the BubbleContainer hero
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="action">ITemplateAction object</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetStyles(Line.Messaging.BubbleContainer,Line.Messaging.BubbleStyles)">
            <summary>
            Sets styles to the BubbleContainer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="styles">Bubble container style</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHeaderStyle(Line.Messaging.BubbleContainer,Line.Messaging.BlockStyle)">
            <summary>
            Sets style to the header of BubbleContainer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="style">BlockStlye</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetHeroStyle(Line.Messaging.BubbleContainer,Line.Messaging.BlockStyle)">
            <summary>
            Sets style to the hero of BubbleContainer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="style">BlockStlye</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetBodyStyle(Line.Messaging.BubbleContainer,Line.Messaging.BlockStyle)">
            <summary>
            Sets style to the body of BubbleContainer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="style">BlockStlye</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerExtensions.SetFooterStyle(Line.Messaging.BubbleContainer,Line.Messaging.BlockStyle)">
            <summary>
            Sets style to the footer of BubbleContainer
            </summary>
            <param name="self">BubbleContainer</param>
            <param name="style">BlockStlye</param>
            <returns>BubbleContainer</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerFlexMessage.SetBubbleContainer(Line.Messaging.BubbleContainer)">
            <summary>
            Sets a Bubble container to the FlexMessage object.
            </summary>
            <param name="bubbleContainer"></param>
            <returns>Flex Message</returns>
        </member>
        <member name="M:Line.Messaging.BubbleContainerFlexMessage.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="altText">alt text</param>
        </member>
        <member name="M:Line.Messaging.BubbleContainerFlexMessage.SetQuickReply(Line.Messaging.QuickReply)">
            <summary>
            Sets a QuickReply object to the FlexMessage objecy.
            </summary>
            <param name="quickReply"></param>
            <returns>Flex Message</returns>
        </member>
        <member name="M:Line.Messaging.CarouselContainerFlexMessage.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="altText">alt text</param>
        </member>
        <member name="M:Line.Messaging.CarouselContainerFlexMessage.AddBubbleContainer(Line.Messaging.BubbleContainer)">
            <summary>
            Add a bubble container to the FlexMessage object.
            </summary>
            <param name="bubbleContainer">Bubble Container</param>
            <returns>Flex Message</returns>
        </member>
        <member name="M:Line.Messaging.CarouselContainerFlexMessage.SetQuickReply(Line.Messaging.QuickReply)">
            <summary>
            Sets a QuickReply object to the QuickReply object.
            </summary>
            <param name="quickReply"></param>
            <returns>Flex Message</returns>
        </member>
        <member name="T:Line.Messaging.AspectRatio">
            <summary>
            Aspect ratio of the image. 
            Specify in the {width}:{height} format. <para>
            Specify the value of the {width} property and the {height} property in the range from 1 to 100000. However, 
            you cannot set the {height} property to a value that is more than three times the value of the {width} property. </para>
            The default value is 1:1.
            </summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._1_1">
            <summary>1:1</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._151_1">
            <summary>1.51:1</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._191_1">
            <summary>1.91:1</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._4_3">
            <summary>4:3</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._16_9">
            <summary>16:9</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._20_13">
            <summary>20:13</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._2_1">
            <summary>2:1</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._3_1">
            <summary>3:1</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._3_4">
            <summary>3:4</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._9_16">
            <summary>9:16</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._1_2">
            <summary>1:2</summary>
        </member>
        <member name="F:Line.Messaging.AspectRatio._1_3">
            <summary>1:3</summary>
        </member>
        <member name="M:Line.Messaging.AspectRatio.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="width">Width of aspect ratio</param>
            <param name="height">Height of aspect ratio</param>
        </member>
        <member name="T:Line.Messaging.BoxLayout">
            <summary>
            The placement style of components in this box. Specify one of the following values
            </summary>
        </member>
        <member name="F:Line.Messaging.BoxLayout.Horizontal">
            <summary>
            Components are placed horizontally. The direction property of the bubble container specifies the order.
            </summary>
        </member>
        <member name="F:Line.Messaging.BoxLayout.Vertical">
            <summary>
            Components are placed vertically from top to bottom.
            </summary>
        </member>
        <member name="F:Line.Messaging.BoxLayout.Baseline">
            <summary>
            Components are placed in the same way as horizontal is specified except the baselines of the components are aligned.
            </summary>
        </member>
        <member name="T:Line.Messaging.BlockStyle">
            <summary>
            Block Style
            </summary>
        </member>
        <member name="P:Line.Messaging.BlockStyle.BackgroundColor">
            <summary>
            Background color of the block. Use a hexadecimal color code.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BlockStyle.Separator">
            <summary>
            true to place a separator above the block.<para> 
            true will be ignored for the first block in a container because you cannot place a separator above the first block. 
            The default value is false. </para>
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BlockStyle.SeparatorColor">
            <summary>
            Color of the separator. Use a hexadecimal color code.
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="T:Line.Messaging.BubbleStyles">
            <summary>
            Use the following two objects to define the style of blocks in a bubble.
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleStyles.Header">
            <summary>
            Style of the header block
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleStyles.Hero">
            <summary>
            Style of the hero block
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleStyles.Body">
            <summary>
            Style of the body block
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="P:Line.Messaging.BubbleStyles.Footer">
            <summary>
            Style of the footer block
            <para>(Optional)</para>
            </summary>
        </member>
        <member name="T:Line.Messaging.ImagemapMessage">
            <summary>
            Imagemaps are images with one or more links. You can assign one link for the entire image or multiple links which correspond to different regions of the image.
            https://developers.line.me/en/docs/messaging-api/reference/#imagemap-message
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapMessage.BaseUrl">
            <summary>
            Base URL of image (Max: 1000 characters)
            HTTPS
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapMessage.AltText">
            <summary>
            Alternative text
            Max: 400 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapMessage.BaseSize">
            <summary>
            Width of base image (set to 1040px）
            Height of base image（set to the height that corresponds to a width of 1040px）
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapMessage.Video">
            <summary>
            Video to play on imagemap
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapMessage.Actions">
            <summary>
            Action when tapped.
            Max: 50
            </summary>
        </member>
        <member name="M:Line.Messaging.ImagemapMessage.#ctor(System.String,System.String,Line.Messaging.ImagemapSize,System.Collections.Generic.IList{Line.Messaging.IImagemapAction},Line.Messaging.QuickReply,Line.Messaging.Video)">
            <summary>
            Constructor
            </summary>
            <param name="baseUrl">
            Base URL of image (Max: 1000 characters)
            HTTPS
            </param>
            <param name="altText">
            Alternative text
            Max: 400 characters
            </param>
            <param name="baseSize">
            Width of base image (set to 1040px）
            Height of base image（set to the height that corresponds to a width of 1040px）
            </param>
            <param name="actions">
            Action when tapped.
            Max: 50
            </param>
            <param name="quickReply">
            QuickReply
            </param>
            <param name="video">
            Video to play on imagemap
            </param>
        </member>
        <member name="P:Line.Messaging.ExternalLink.LinkUri">
            <summary>
            Webpage URL. Called when the label displayed after the video is tapped.
            / Max: 1000 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.ExternalLink.Label">
            <summary>
            Label.Displayed after the video is finished.
            / Max: 30 characters
            </summary>
        </member>
        <member name="M:Line.Messaging.ExternalLink.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="linkUri">
            Webpage URL. Called when the label displayed after the video is tapped.
            / Max: 1000 characters
            </param>
            <param name="label">
            Label.Displayed after the video is finished.
            / Max: 30 characters
            </param>
        </member>
        <member name="T:Line.Messaging.ImagemapArea">
            <summary>
            Defines the size of a tappable area. The top left is used as the origin of the area.
            https://developers.line.me/en/docs/messaging-api/reference/#imagemap-area-object
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapArea.X">
            <summary>
            Horizontal position relative to the top-left corner of the area.
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapArea.Y">
            <summary>
            Vertical position relative to the top-left corner of the area.
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapArea.Width">
            <summary>
            Width of the tappable area
            </summary>
        </member>
        <member name="P:Line.Messaging.ImagemapArea.Height">
            <summary>
            Height of the tappable area
            </summary>
        </member>
        <member name="M:Line.Messaging.ImagemapArea.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="x">
            Horizontal position relative to the top-left corner of the area.
            </param>
            <param name="y">
            Vertical position relative to the top-left corner of the area.
            </param>
            <param name="width">
            Width of the tappable area
            </param>
            <param name="height">
            Height of the tappable area
            </param>
        </member>
        <member name="T:Line.Messaging.MessageImagemapAction">
            <summary>
            Object which specifies the actions and tappable regions of an imagemap.
            When a region is tapped, the message specified in message is sent.
            https://developers.line.me/en/docs/messaging-api/reference/#imagemap-action-objects
            </summary>
        </member>
        <member name="P:Line.Messaging.MessageImagemapAction.Area">
            <summary>
            Defined tappable area
            </summary>
        </member>
        <member name="P:Line.Messaging.MessageImagemapAction.Text">
            <summary>
            Message to send
            Max: 400 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.MessageImagemapAction.Label">
            <summary>
            Label for the action. Spoken when the accessibility feature is enabled on the client device. 
            Max: 50 characters
            Supported on LINE iOS version 8.2.0 and later.
            </summary>
        </member>
        <member name="M:Line.Messaging.MessageImagemapAction.#ctor(Line.Messaging.ImagemapArea,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="area">
            Defined tappable area
            </param>
            <param name="text">
            Message to send
            Max: 400 characters
            </param>
            <param name="label">
            Label for the action. Spoken when the accessibility feature is enabled on the client device. 
            Max: 50 characters
            Supported on LINE iOS version 8.2.0 and later.
            </param>
        </member>
        <member name="T:Line.Messaging.UriImagemapAction">
            <summary>
            Object which specifies the actions and tappable regions of an imagemap.
            When a region is tapped, the user is redirected to the URI specified in uri.
            https://developers.line.me/en/docs/messaging-api/reference/#imagemap-action-objects
            </summary>
        </member>
        <member name="P:Line.Messaging.UriImagemapAction.Area">
            <summary>
            Defined tappable area
            </summary>
        </member>
        <member name="P:Line.Messaging.UriImagemapAction.LinkUri">
            <summary>
            Webpage URL
            Max: 1000 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.UriImagemapAction.Label">
            <summary>
            Label for the action. Spoken when the accessibility feature is enabled on the client device. 
            Max: 50 characters
            Supported on LINE iOS version 8.2.0 and later.
            </summary>
        </member>
        <member name="M:Line.Messaging.UriImagemapAction.#ctor(Line.Messaging.ImagemapArea,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="area">
            Defined tappable area
            </param>
            <param name="linkUri">
            Label for the action. Spoken when the accessibility feature is enabled on the client device. 
            Max: 50 characters
            Supported on LINE iOS version 8.2.0 and later.
            </param>
            <param name="label">
            Label for the action. Spoken when the accessibility feature is enabled on the client device. 
            Max: 50 characters
            Supported on LINE iOS version 8.2.0 and later.
            </param>
        </member>
        <member name="P:Line.Messaging.Video.OriginalContentUrl">
            <summary>
            URL of the video file (Max: 1000 characters)
            HTTPS, mp4
            / Max: 1 minute
            / Max: 10 MB
            / Note: A very wide or tall video may be cropped when played in some environments.
            </summary>
        </member>
        <member name="P:Line.Messaging.Video.PreviewImageUrl">
            <summary>
            URL of the preview image (Max: 1000 characters)
            HTTP, JPEG
            / Max: 240 x 240 pixels
            / Max: 1 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.Video.Area">
            <summary>
            Imagemap Area
            </summary>
        </member>
        <member name="P:Line.Messaging.Video.ExternalLink">
            <summary>
            Label. Displayed after the video is finished.
            And Webpage URL. Called when the label displayed after the video is tapped.
            </summary>
        </member>
        <member name="M:Line.Messaging.Video.#ctor(System.String,System.String,Line.Messaging.ImagemapArea,Line.Messaging.ExternalLink)">
            <summary>
            Constructor
            </summary>
            <param name="originalContentUrl">
            URL of the video file (Max: 1000 characters)
            HTTPS, mp4
            / Max: 1 minute
            / Max: 10 MB
            / Note: A very wide or tall video may be cropped when played in some environments.
            </param>
            <param name="previewImageUrl">
            URL of the preview image (Max: 1000 characters)
            HTTP, JPEG
            / Max: 240 x 240 pixels
            / Max: 1 MB
            </param>
            <param name="area">
            Imagemap Area
            </param>
            <param name="externalLink">
            Label. Displayed after the video is finished.
            And Webpage URL. Called when the label displayed after the video is tapped.
            </param>
        </member>
        <member name="T:Line.Messaging.ImageMessage">
            <summary>
            Image
            https://developers.line.me/en/docs/messaging-api/reference/#image
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageMessage.OriginalContentUrl">
            <summary>
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG
            Max: 1024 x 1024
            Max: 1 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageMessage.PreviewImageUrl">
            <summary>
            Preview image URL (Max: 1000 characters)
            HTTPS
            JPEG
            Max: 240 x 240
            Max: 1 MB
            </summary>
        </member>
        <member name="M:Line.Messaging.ImageMessage.#ctor(System.String,System.String,Line.Messaging.QuickReply)">
            <summary>
            Constructor
            </summary>
            <param name="originalContentUrl">
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG
            Max: 1024 x 1024
            Max: 1 MB
            </param>
            <param name="previerImageUrl">
            Preview image URL (Max: 1000 characters)
            HTTPS
            JPEG
            Max: 240 x 240
            Max: 1 MB
            </param>
            <param name="quickReply">
            QuickReply
            </param>
        </member>
        <member name="P:Line.Messaging.ISendMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature. Supported on LINE 8.11.0 and later for iOS and Android. For more information, see Using quick replies.
            </summary>
        </member>
        <member name="T:Line.Messaging.LocationMessage">
            <summary>
            Location
            https://developers.line.me/en/docs/messaging-api/reference/#location
            </summary>
        </member>
        <member name="P:Line.Messaging.LocationMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.LocationMessage.Title">
            <summary>
            Title
            Max: 100 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.LocationMessage.Address">
            <summary>
            Address
            Max: 100 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.LocationMessage.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:Line.Messaging.LocationMessage.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="M:Line.Messaging.LocationMessage.#ctor(System.String,System.String,System.Decimal,System.Decimal,Line.Messaging.QuickReply)">
            <summary>
            Constructor
            </summary>
            <param name="title">
            Title
            Max: 100 characters
            </param>
            <param name="address">
            Address
            Max: 100 characters
            </param>
            <param name="latitude">
            Latitude
            </param>
            <param name="longitude">
            Longitude
            </param>
            <param name="quickReply">
            QuickReply
            </param>
        </member>
        <member name="T:Line.Messaging.QuickReplyButtonObject">
            <summary>
            This is a quick reply option that is displayed as a button.
            https://developers.line.me/en/reference/messaging-api/#quick-reply-button-object
            </summary>
        </member>
        <member name="P:Line.Messaging.QuickReplyButtonObject.ImageUrl">
            <summary>
            URL of the icon that is displayed at the beginning of the button 
            Max: 1000 characters
            URL scheme: https
            Image format: PNG
            Aspect ratio: 1:1
            Data size: Up to 1 MB
            There is no limit on the image size.
            If the action property has a camera action, camera roll action, or location action, and the imageUrl property is not set, the default icon is displayed.
            </summary>
        </member>
        <member name="T:Line.Messaging.QuickReply">
            <summary>
            https://developers.line.me/en/reference/messaging-api/#quick-reply
            These properties are used for the quick reply feature. Supported on LINE 8.11.0 and later for iOS and Android. For more information, see Using quick replies.
            </summary>
        </member>
        <member name="P:Line.Messaging.QuickReply.Items">
            <summary>
            Quick reply button objects. Max: 13 objects
            </summary>
        </member>
        <member name="T:Line.Messaging.ActionArea">
            <summary>
            Rich menu  Area
            https://developers.line.me/en/docs/messaging-api/reference/#area-object
            </summary>
        </member>
        <member name="P:Line.Messaging.ActionArea.Bounds">
            <summary>
            Object describing the boundaries of the area in pixels. See bounds object.
            </summary>
        </member>
        <member name="P:Line.Messaging.ActionArea.Action">
            <summary>
            Action performed when the area is tapped. See action objects. Note: The label field is not supported for actions in rich menus.
            </summary>
        </member>
        <member name="T:Line.Messaging.ResponseRichMenu">
            <summary>
            Rich menu response object.
            https://developers.line.me/en/docs/messaging-api/reference/#rich-menu-response-object
            </summary>
        </member>
        <member name="P:Line.Messaging.ResponseRichMenu.RichMenuId">
            <summary>
            Rich menu ID
            </summary>
        </member>
        <member name="M:Line.Messaging.ResponseRichMenu.#ctor(System.String,Line.Messaging.RichMenu)">
            <summary>
            Constructor
            </summary>
            <param name="richMenuId">
            Rich menu ID
            </param>
            <param name="source">
            Rich menu object
            </param>
        </member>
        <member name="T:Line.Messaging.RichMenu">
            <summary>
            Rich menu object
            https://developers.line.me/en/docs/messaging-api/reference/#rich-menu-object
            </summary>
        </member>
        <member name="P:Line.Messaging.RichMenu.Size">
            <summary>
            size object which contains the width and height of the rich menu displayed in the chat. Rich menu images must be one of the following sizes: 2500x1686, 2500x843.
            </summary>
        </member>
        <member name="P:Line.Messaging.RichMenu.Selected">
            <summary>
            true to display the rich menu by default. Otherwise, false.
            </summary>
        </member>
        <member name="P:Line.Messaging.RichMenu.Name">
            <summary>
            Name of the rich menu. This value can be used to help manage your rich menus and is not displayed to users. Maximum of 300 characters.
            </summary>
        </member>
        <member name="P:Line.Messaging.RichMenu.ChatBarText">
            <summary>
            Text displayed in the chat bar. Maximum of 14 characters.
            </summary>
        </member>
        <member name="P:Line.Messaging.RichMenu.Areas">
            <summary>
            Array of area objects which define the coordinates and size of tappable areas. Maximum of 20 area objects.
            </summary>
        </member>
        <member name="M:Line.Messaging.RichMenu.ToResponseRichMenu(System.String)">
            <summary>
            Converts from RichMenu to ResponseRichMenu
            </summary>
            <param name="richMenuId">
            Rich menu ID
            </param>
            <returns>ResponseRichMenu object</returns>
        </member>
        <member name="T:Line.Messaging.StickerMessage">
            <summary>
            Sticker. For a list of the sticker IDs for stickers that can be sent with the Messaging API, see Sticker list.
            </summary>
        </member>
        <member name="P:Line.Messaging.StickerMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.StickerMessage.PackageId">
            <summary>
            Package ID for a set of stickers. For information on package IDs, see the Sticker list.
            </summary>
        </member>
        <member name="P:Line.Messaging.StickerMessage.StickerId">
            <summary>
            Sticker ID. For a list of sticker IDs for stickers that can be sent with the Messaging API, see the Sticker list.
            </summary>
        </member>
        <member name="M:Line.Messaging.StickerMessage.#ctor(System.String,System.String,Line.Messaging.QuickReply)">
            <summary>
            Constructor
            </summary>
            <param name="packageId">
            Package ID for a set of stickers. For information on package IDs, see the Sticker list.
            </param>
            <param name="stickerId">
            Sticker ID. For a list of sticker IDs for stickers that can be sent with the Messaging API, see the Sticker list.
            </param>
            <param name="quickReply">
            QuickReply
            </param>
        </member>
        <member name="T:Line.Messaging.TemplateMessage">
            <summary>
            Template messages are messages with predefined layouts which you can customize. There are four types of templates available that can be used to interact with users through your bot.
            </summary>
        </member>
        <member name="P:Line.Messaging.TemplateMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.TemplateMessage.Template">
            <summary>
            A Buttons, Confirm, Carousel, or Image Carousel object.
            </summary>
        </member>
        <member name="P:Line.Messaging.TemplateMessage.AltText">
            <summary>
            Alternative text.
            Max: 400 characters
            </summary>
        </member>
        <member name="M:Line.Messaging.TemplateMessage.#ctor(System.String,Line.Messaging.ITemplate,Line.Messaging.QuickReply)">
             <summary>
             Constructor
             </summary>
             <param name="altText">
             Alternative text.
             Max: 400 characters
            </param>
             <param name="template">
             A Buttons, Confirm, Carousel, or Image Carousel object.
             </param>
             <param name="quickReply">
             QuickRepy
             </param>
        </member>
        <member name="T:Line.Messaging.ButtonsTemplate">
            <summary>
            Template message with an image, title, text, and multiple action buttons.
            https://developers.line.me/en/docs/messaging-api/reference/#buttons
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.ThumbnailImageUrl">
            <summary>
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG or PNG
            Aspect ratio: 1:1.51
            Max width: 1024px
            Max: 1 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.ImageAspectRatio">
            <summary>
            Aspect ratio of the image. Specify one of the following values:
            rectangle: 1.51:1 
            square: 1:1 
            The default value is rectangle.
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.ImageSize">
            <summary>
            Size of the image. Specify one of the following values:
            cover: The image fills the entire image area.Parts of the image that do not fit in the area are not displayed.
            contain: The entire image is displayed in the image area.A background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
            The default value is cover.
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.ImageBackgroundColor">
            <summary>
            Background color of image. Specify a RGB color value. The default value is #FFFFFF (white).
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.Title">
            <summary>
            Title
            Max: 40 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.Text">
            <summary>
            Message text
            Max: 160 characters(no image or title)
            Max: 60 characters(message with an image or title)
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.Actions">
            <summary>
            Action when tapped
            Max: 4
            </summary>
        </member>
        <member name="P:Line.Messaging.ButtonsTemplate.DefaultAction">
            <summary>
            Action when image is tapped; set for the entire image, title, and text area
            </summary>
        </member>
        <member name="M:Line.Messaging.ButtonsTemplate.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Line.Messaging.ITemplateAction},Line.Messaging.ImageAspectRatioType,Line.Messaging.ImageSizeType,System.String,Line.Messaging.ITemplateAction)">
            <summary>
            Constructor
            </summary>
            <param name="text">
            Message text
            Max: 160 characters(no image or title)
            Max: 60 characters(message with an image or title)
            </param>
            <param name="thumbnailImageUrl">
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG or PNG
            Aspect ratio: 1:1.51
            Max width: 1024px
            Max: 1 MB
            </param>
            <param name="title">
            Title
            Max: 40 characters
            </param>
            <param name="actions">
            Action when tapped
            Max: 4
            </param>
            <param name="imageAspectRatio">
            Aspect ratio of the image. Specify one of the following values:
            rectangle: 1.51:1 
            square: 1:1 
            The default value is rectangle.
            </param>
            <param name="imageSize">
            Size of the image. Specify one of the following values:
            cover: The image fills the entire image area.Parts of the image that do not fit in the area are not displayed.
            contain: The entire image is displayed in the image area.A background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
            The default value is cover.
            </param>
            <param name="imageBackgroundColor">
            Background color of image. Specify a RGB color value. The default value is #FFFFFF (white).
            </param>
            <param name="defaultAction">
            Action when image is tapped; set for the entire image, title, and text area
            </param>
        </member>
        <member name="T:Line.Messaging.CarouselColumn">
            <summary>
            Column object for carousel.
            Because of the height limitation for carousel template messages, the lower part of the text display area will get cut off if the height limitation is exceeded. For this reason, depending on the character width, the message text may not be fully displayed even when it is within the character limits.
            Keep the number of actions consistent for all columns.If you use an image or title for a column, make sure to do the same for all other columns.
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselColumn.ThumbnailImageUrl">
            <summary>
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG or PNG
            Aspect ratio: 1:1.51
            Max width: 1024px
            Max: 1 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselColumn.ImageBackgroundColor">
            <summary>
            Background color of image. Specify a RGB color value. The default value is #FFFFFF (white).
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselColumn.Title">
            <summary>
            Title
            Max: 40 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselColumn.Text">
            <summary>
            Message text
            Max: 120 characters(no image or title)
            Max: 60 characters(message with an image or title)
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselColumn.Actions">
            <summary>
            Action when tapped
            Max: 3
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselColumn.DefaultAction">
            <summary>
            Action when image is tapped; set for the entire image, title, and text area
            </summary>
        </member>
        <member name="M:Line.Messaging.CarouselColumn.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Line.Messaging.ITemplateAction},System.String,Line.Messaging.ITemplateAction)">
            <summary>
            Constructor
            </summary>
            <param name="text">
            Message text
            Max: 120 characters(no image or title)
            Max: 60 characters(message with an image or title)
            </param>
            <param name="thumbnailImageUrl">
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG or PNG
            Aspect ratio: 1:1.51
            Max width: 1024px
            Max: 1 MB
            </param>
            <param name="title">
            Title
            Max: 40 characters
            </param>
            <param name="actions">
            Action when tapped
            Max: 3
            </param>
            <param name="imageBackgroundColor">
            Background color of image. Specify a RGB color value. The default value is #FFFFFF (white).
            </param>
            <param name="defaultAction">
            Action when image is tapped; set for the entire image, title, and text area
            </param>
        </member>
        <member name="T:Line.Messaging.CarouselTemplate">
            <summary>
            Template message with multiple columns which can be cycled like a carousel.
            https://developers.line.me/en/docs/messaging-api/reference/#carousel
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselTemplate.Columns">
            <summary>
            Array of columns
            Max: 10
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselTemplate.ImageAspectRatio">
            <summary>
            Aspect ratio of the image. Specify one of the following values:
            rectangle: 1.51:1 
            square: 1:1 
            The default value is rectangle.
            </summary>
        </member>
        <member name="P:Line.Messaging.CarouselTemplate.ImageSize">
            <summary>
            Size of the image. Specify one of the following values:
            cover: The image fills the entire image area.Parts of the image that do not fit in the area are not displayed.
            contain: The entire image is displayed in the image area.A background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
            The default value is cover.
            </summary>
        </member>
        <member name="M:Line.Messaging.CarouselTemplate.#ctor(System.Collections.Generic.IList{Line.Messaging.CarouselColumn},Line.Messaging.ImageAspectRatioType,Line.Messaging.ImageSizeType)">
            <summary>
            Constructor
            </summary>
            <param name="columns">
            Array of columns
            Max: 10
            </param>
            <param name="imageAspectRatio">
            Aspect ratio of the image. Specify one of the following values:
            rectangle: 1.51:1 
            square: 1:1 
            The default value is rectangle.
            </param>
            <param name="imageSize">
            Size of the image. Specify one of the following values:
            cover: The image fills the entire image area.Parts of the image that do not fit in the area are not displayed.
            contain: The entire image is displayed in the image area.A background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
            The default value is cover.
            </param>
        </member>
        <member name="T:Line.Messaging.ConfirmTemplate">
            <summary>
            Template message with two action buttons.
            </summary>
        </member>
        <member name="P:Line.Messaging.ConfirmTemplate.Text">
            <summary>
            Message text
            Max: 240 characters
            </summary>
        </member>
        <member name="P:Line.Messaging.ConfirmTemplate.Actions">
            <summary>
            Action when tapped
            Set 2 actions for the 2 buttons
            </summary>
        </member>
        <member name="M:Line.Messaging.ConfirmTemplate.#ctor(System.String,System.Collections.Generic.IList{Line.Messaging.ITemplateAction})">
            <summary>
            Constructor
            </summary>
            <param name="text">
            Message text
            Max: 240 characters
            </param>
            <param name="actions">
            Action when tapped
            Set 2 actions for the 2 buttons
            </param>
        </member>
        <member name="F:Line.Messaging.ImageAspectRatioType.Rectangle">
            <summary>
            1.51:1 
            </summary>
        </member>
        <member name="F:Line.Messaging.ImageAspectRatioType.Square">
            <summary>
            1:1
            </summary>
        </member>
        <member name="T:Line.Messaging.ImageCarouselColumn">
            <summary>
            Column object for image carousel
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageCarouselColumn.ImageUrl">
            <summary>
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG or PNG
            Aspect ratio: 1:1
            Max width: 1024px
            Max: 1 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageCarouselColumn.Action">
            <summary>
            Action when image is tapped
            </summary>
        </member>
        <member name="M:Line.Messaging.ImageCarouselColumn.#ctor(System.String,Line.Messaging.ITemplateAction)">
            <summary>
            Constructor
            </summary>
            <param name="imageUrl">
            Image URL (Max: 1000 characters)
            HTTPS
            JPEG or PNG
            Aspect ratio: 1:1
            Max width: 1024px
            Max: 1 MB
            </param>
            <param name="action">
            Action when image is tapped
            </param>
        </member>
        <member name="T:Line.Messaging.ImageCarouselTemplate">
            <summary>
            Template with multiple images which can be cycled like a carousel.
            https://developers.line.me/en/docs/messaging-api/reference/#image-carousel
            </summary>
        </member>
        <member name="P:Line.Messaging.ImageCarouselTemplate.Columns">
            <summary>
            Array of columns
            Max: 10
            </summary>
        </member>
        <member name="M:Line.Messaging.ImageCarouselTemplate.#ctor(System.Collections.Generic.IList{Line.Messaging.ImageCarouselColumn})">
            <summary>
            Constructor
            </summary>
            <param name="columns">
            Array of columns
            Max: 10
            </param>
        </member>
        <member name="F:Line.Messaging.ImageSizeType.Cover">
            <summary>
            The image fills the entire image area. Parts of the image that do not fit in the area are not displayed.
            </summary>
        </member>
        <member name="F:Line.Messaging.ImageSizeType.Contain">
            <summary>
            The entire image is displayed in the image area. 
            A background is displayed in the unused areas to the left and right of vertical images and in the areas above and below horizontal images.
            </summary>
        </member>
        <member name="T:Line.Messaging.TextMessage">
            <summary>
            Text
            https://developers.line.me/en/docs/messaging-api/reference/#text
            </summary>
        </member>
        <member name="P:Line.Messaging.TextMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.TextMessage.Text">
            <summary>
            Message text
            Max: 2000 characters
            </summary>
        </member>
        <member name="M:Line.Messaging.TextMessage.#ctor(System.String,Line.Messaging.QuickReply)">
            <summary>
            Constructor
            </summary>
            <param name="text">
            Message text
            Max: 2000 characters
            </param>
            <param name="quickReply">
            QuickReply
            </param>
        </member>
        <member name="T:Line.Messaging.VideoMessage">
            <summary>
            Video
            https://developers.line.me/en/docs/messaging-api/reference/#video
            </summary>
        </member>
        <member name="P:Line.Messaging.VideoMessage.QuickReply">
            <summary>
            These properties are used for the quick reply feature
            </summary>
        </member>
        <member name="P:Line.Messaging.VideoMessage.OriginalContentUrl">
            <summary>
            URL of video file (Max: 1000 characters)
            HTTPS
            mp4
            Less than 1 minute
            Max: 10 MB
            </summary>
        </member>
        <member name="P:Line.Messaging.VideoMessage.PreviewImageUrl">
            <summary>
            URL of preview image (Max: 1000 characters)
            HTTPS
            JPEG
            Max: 240 x 240
            Max: 1 MB
            </summary>
        </member>
        <member name="M:Line.Messaging.VideoMessage.#ctor(System.String,System.String,Line.Messaging.QuickReply)">
            <summary>
            Constructor
            </summary>
            <param name="originalContentUrl">
            URL of video file (Max: 1000 characters)
            HTTPS
            mp4
            Less than 1 minute
            Max: 10 MB
            </param>
            <param name="previerImageUrl">
            URL of preview image (Max: 1000 characters)
            HTTPS
            JPEG
            Max: 240 x 240
            Max: 1 MB
            </param>
            <param name="quickReply">
            QuickReply
            </param>
        </member>
        <member name="T:Line.Messaging.Webhooks.AccountLinkEvent">
            <summary>
            Event object for when a user has linked his/her LINE account with a provider's service account. You can reply to account link events.
            If the link token has expired or has already been used, no webhook event will be sent and the user will be shown an error.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.AccountLinkEvent.Link">
            <summary>
            Link Object
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.Beacon">
            <summary>
            Line Beacon
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Beacon.Hwid">
            <summary>
            Hardware ID of the beacon that was detected
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Beacon.Type">
            <summary>
            Type of beacon event
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Beacon.Dm">
            <summary>
            Optional. Device message of beacon that was detected
            The "device message" consists of data generated by the beacon to send notifications to bots. The beacon.dm property is only included in webhooks from devices that support the "device message" property. You can use beacon.dm with the LINE Simple Beacon specification. For more information, see the LINE Simple Beacon specification.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.BeaconEvent">
            <summary>
            Event object for when a user enters or leaves the range of a LINE Beacon. You can reply to beacon events.
            https://developers.line.me/en/docs/messaging-api/reference/#beacon-event
            </summary>
        </member>
        <member name="F:Line.Messaging.Webhooks.BeaconType.Enter">
            <summary>
            Entered beacon's reception range
            </summary>
        </member>
        <member name="F:Line.Messaging.Webhooks.BeaconType.Leave">
            <summary>
            Left beacon's reception range
            </summary>
        </member>
        <member name="F:Line.Messaging.Webhooks.BeaconType.Banner">
            <summary>
            Tapped beacon banner 
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.ContentProvider">
            <summary>
            Content provider of media message
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.ContentProvider.Type">
            <summary>
            Content Provider Type
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.ContentProvider.OriginalContentUrl">
            <summary>
            URL of the media file. Only included when contentProvider.type is external.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.ContentProvider.PreviewImageUrl">
            <summary>
            URL of the preview image. Only included when contentProvider.type is external.
            </summary>
        </member>
        <member name="M:Line.Messaging.Webhooks.ContentProvider.#ctor(Line.Messaging.Webhooks.ContentProviderType,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="type">
            Provider of the media file.
            / line: LINE.The binary media data can be retrieved from the content endpoint.
            / external: Provider other than LINE
            </param>
            <param name="originalContentUrl">
            URL of the media file. Only included when contentProvider.type is external.
            </param>
            <param name="previewImageUrl">
            URL of the preview image. Only included when contentProvider.type is external.
            </param>
        </member>
        <member name="T:Line.Messaging.Webhooks.ContentProviderType">
            <summary>
            Provider of the media file.
            </summary>
        </member>
        <member name="F:Line.Messaging.Webhooks.ContentProviderType.Line">
            <summary>
            LINE. The binary media data can be retrieved from the content endpoint.
            </summary>
        </member>
        <member name="F:Line.Messaging.Webhooks.ContentProviderType.External">
            <summary>
            Provider other than LINE
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.DeviceLinkEvent">
            <summary>
            Indicates that a LINE Things-compatible device has been linked with LINE by a user operation. For more information, see Receiving device link events via webhook.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.DeviceUnlinkEvent">
            <summary>
            Indicates that a LINE Things-compatible device has been unlinked from LINE by a user operation. For more information, see Receiving device unlink events via webhook.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.EventMessage">
            <summary>
            Contents of the message
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.EventMessage.Id">
            <summary>
            Message ID
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.EventMessage.Type">
            <summary>
            EventMessageType
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.EventMessageType">
            <summary>
            Webhook event message types.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.EventSourceType">
            <summary>
            Webhook Event Source Type.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.FileEventMessage">
            <summary>
            Message object which contains the file sent from the source. The binary data can be retrieved from the content endpoint.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.FileEventMessage.FileName">
            <summary>
            file name
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.FileEventMessage.FileSize">
            <summary>
            File size in bytes
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.FollowEvent">
            <summary>
            Event object for when your account is added as a friend (or unblocked). You can reply to follow events.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.JoinEvent">
            <summary>
            Event object for when your account joins a group or talk room. You can reply to join events.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.LeaveEvent">
            <summary>
            Event object for when your account leaves a group.
            No event is generated when your account leaves a room.
            Leave events are not generated if you leave a group or room using leave group or leave room.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.Link">
            <summary>
            Link Object
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Link.Result">
            <summary>
            One of the following values to indicate whether the link was successful or not.
            <list type="bullet">
            <item>
            <description>ok: Indicates the link was successful.</description>
            </item>
            <item>
            <description>failed: Indicates the link failed for any reason, such as due to a user impersonation.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Link.Nonce">
            <summary>
            Specified nonce when verifying the user ID
            <para>https://developers.line.me/en/docs/messaging-api/linking-accounts#verifying-user-id</para>
            </summary>
        </member>
        <member name="M:Line.Messaging.Webhooks.Link.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="result">
            One of the following values to indicate whether the link was successful or not.
            <list type="bullet">
            <item>
            <description>ok: Indicates the link was successful.</description>
            </item>
            <item>
            <description>failed: Indicates the link failed for any reason, such as due to a user impersonation.</description>
            </item>
            </list>
            </param>
            <param name="nonce">
            Specified nonce when verifying the user ID
            <para>https://developers.line.me/en/docs/messaging-api/linking-accounts#verifying-user-id</para>
            </param>
        </member>
        <member name="T:Line.Messaging.Webhooks.LocationEventMessage">
            <summary>
            Message object which contains the location data sent from the source.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.LocationEventMessage.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.LocationEventMessage.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.LocationEventMessage.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.LocationEventMessage.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.MemberJoinEvent">
            <summary>
            Event object for when a user joins a group or room that the bot is in.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.MemberJoinEvent.Joined">
            <summary>
            User ID of users who joined
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.MemberLeaveEvent">
            <summary>
            Event object for when a user leaves a group or room that the bot is in.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.MemberLeaveEvent.Left">
            <summary>
            User ID of users who left
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.MessageEvent">
            <summary>
            Event object which contains the sent message. The message field contains a message object which corresponds with the message type. You can reply to message events.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.MessageEvent.Message">
            <summary>
            Contents of the message
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.MediaEventMessage">
            <summary>
            Media event message (Image, Video or Audio)
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.MediaEventMessage.ContentProvider">
            <summary>
            ContentProvider
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.MediaEventMessage.Duration">
            <summary>
            Length of media file (milliseconds)
            </summary>
        </member>
        <member name="M:Line.Messaging.Webhooks.MediaEventMessage.#ctor(Line.Messaging.Webhooks.EventMessageType,System.String,Line.Messaging.Webhooks.ContentProvider,System.Nullable{System.Int32})">
            <summary>
            Constructor
            </summary>
            <param name="type">Event Message Type</param>
            <param name="id">Message ID</param>
            <param name="contentProvider">ContentProvider Object</param>
            <param name="duration">Duration</param>
        </member>
        <member name="T:Line.Messaging.Webhooks.Moved">
            <summary>
            Joined or left Members
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Moved.Members">
            <summary>
            Joined or left Members
            </summary>
        </member>
        <member name="M:Line.Messaging.Webhooks.Moved.#ctor(System.Collections.Generic.IList{Line.Messaging.Webhooks.WebhookEventSource})">
            <summary>
            Constructor
            </summary>
            <param name="members">
            Joined or left Members
            </param>
        </member>
        <member name="T:Line.Messaging.Webhooks.Postback">
            <summary>
            Postback
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Postback.Data">
            <summary>
            Postback data
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Postback.Params">
            <summary>
            date and time selected by a user through a datetime picker action.
            Only returned for postback actions via the datetime picker.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.PostbackEvent">
            <summary>
            Event object for when a user performs an action on a template message which initiates a postback. You can reply to postback events.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.PostbackEvent.Postback">
            <summary>
            Postback
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.PostbackParams">
            <summary>
            Object with the date and time selected by a user through a datetime picker action. The full-date, time-hour, and time-minute formats follow the RFC3339 protocol.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.PostbackParams.Date">
            <summary>
            Date selected by user. Only included in the date mode. Format: full-date
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.PostbackParams.Time">
            <summary>
            Time selected by the user. Only included in the time mode. Format: time-hour ":" time-minute
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.PostbackParams.DateTime">
            <summary>
            Date and time selected by the user. Only included in the datetime mode. Format: full-date "T" time-hour ":" time-minute
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.StickerEventMessage">
            <summary>
            Message object which contains the sticker data sent from the source. For a list of basic LINE stickers and sticker IDs, see sticker list.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.TextEventMessage">
            <summary>
            Message object which contains the text sent from the source.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.Things">
            <summary>
            LINE Things
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Things.DeviceId">
            <summary>
            Device ID of the LINE Things-compatible device that was linked with LINE
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.Things.Type">
            <summary>
            Link or Unlink
            </summary>
        </member>
        <member name="M:Line.Messaging.Webhooks.Things.#ctor(System.String,Line.Messaging.Webhooks.ThingsType)">
            <summary>
            Constructor
            </summary>
            <param name="deviceId">Device ID of the LINE Things-compatible device that was linked with LINE</param>
            <param name="type">Link or Unlink</param>
        </member>
        <member name="T:Line.Messaging.Webhooks.ThingsType">
            <summary>
            Things Types
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.UnfollowEvent">
            <summary>
            Event object for when your account is blocked.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.WebhookApplication">
            <summary>
            Inherit this class to implement LINE Bot. Then override each event handler.
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.WebhookEvent">
            <summary>
            The webhook event generated on the LINE Platform.
            https://developers.line.me/en/docs/messaging-api/reference/#webhook-event-objects
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.WebhookEvent.Type">
            <summary>
            Identifier for the type of event
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.WebhookEvent.Source">
            <summary>
            JSON object which contains the source of the event
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.WebhookEvent.Timestamp">
            <summary>
            Time of the event in milliseconds
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.WebhookEventSource">
            <summary>
            Webhook Event Source. Source could be User, Group or Room.
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.WebhookEventSource.Id">
            <summary>
            User, Group or Room Id
            </summary>
        </member>
        <member name="P:Line.Messaging.Webhooks.WebhookEventSource.UserId">
            <summary>
            UserId of the Group or Room
            </summary>
        </member>
        <member name="T:Line.Messaging.Webhooks.WebhookEventType">
            <summary>
            Webhook Event Type
            </summary>
        </member>
        <member name="M:Line.Messaging.Webhooks.WebhookRequestMessageHelper.GetWebhookEventsAsync(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Verify if the request is valid, then returns LINE Webhook events from the request
            </summary>
            <param name="request">HttpRequestMessage</param>
            <param name="channelSecret">ChannelSecret</param>
            <param name="botUserId">BotUserId</param>
            <returns>List of WebhookEvent</returns>
        </member>
        <member name="M:Line.Messaging.Webhooks.WebhookRequestMessageHelper.VerifySignature(System.String,System.String,System.String)">
            <summary>
            The signature in the X-Line-Signature request header must be verified to confirm that the request was sent from the LINE Platform.
            Authentication is performed as follows.
            1. With the channel secret as the secret key, your application retrieves the digest value in the request body created using the HMAC-SHA256 algorithm.
            2. The server confirms that the signature in the request header matches the digest value which is Base64 encoded
            https://developers.line.me/en/docs/messaging-api/reference/#signature-validation
            </summary>
            <param name="channelSecret">ChannelSecret</param>
            <param name="xLineSignature">X-Line-Signature header</param>
            <param name="requestBody">RequestBody</param>
            <returns></returns>
        </member>
        <member name="M:Line.Messaging.Webhooks.WebhookRequestMessageHelper.SlowEquals(System.Byte[],System.Byte[])">
            <summary>
            Compares two-byte arrays in length-constant time. 
            This comparison method is used so that password hashes cannot be extracted from on-line systems using a timing attack and then attacked off-line.
            <para> http://bryanavery.co.uk/cryptography-net-avoiding-timing-attack/#comment-85　</para>
            </summary>
        </member>
    </members>
</doc>
