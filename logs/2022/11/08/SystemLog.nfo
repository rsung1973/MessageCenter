2022/11/08 13:00:39



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">

</form>
</body>
</html>

2022/11/08 13:00:40



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:41



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:42



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:43



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:44



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:45



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:46



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:47



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:48



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:49



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:50



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:51



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:52



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:53



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:54



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:55



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:56



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:57



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:58



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">

</form>
</body>
</html>

2022/11/08 13:00:59



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:00



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:01



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:02



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:03



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:04



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:05



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:06



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:07



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:08



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:09



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:10



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">

</form>
</body>
</html>

2022/11/08 13:01:11



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:25:16



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 20;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:25:17



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 20;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:25:18



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 20;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:28:21



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:28:23



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:28:24



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:33:16



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:33:17



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:33:18



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:00



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:01



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:02



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:10



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:11



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:12



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:19



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 24;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:20



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 24;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:30



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:31



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:32



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:38



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:39



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:40



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:48



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:49



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:50



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:56



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:57



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:34:58



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:05



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:06



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:07



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:14



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:15



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:16



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:23



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:24



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:25



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:31



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:32



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:33



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:46



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:47



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:35:48



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:36:19



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:36:20



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="01124">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:36:21



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="01124">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:36:28



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00107" value="01124">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:36:29



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="01124">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:36:30



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="01124">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:41:15



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:41:16



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="01111">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:42:05



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:42:06



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:42:18



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 24;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:42:19



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 24;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:42:20



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 24;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="01122">
<input type="hidden" name="hData00103" value="01113">
<input type="hidden" name="hData00104" value="01112">
<input type="hidden" name="hData00105" value="01123">
<input type="hidden" name="hData00106" value="01125">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="01114">
<input type="hidden" name="hData00110" value="01115">
<input type="hidden" name="hData00111" value="01116">
<input type="hidden" name="hData00112" value="01117">
<input type="hidden" name="hData00113" value="01118">
<input type="hidden" name="hData00114" value="01119">
<input type="hidden" name="hData00115" value="01120">
<input type="hidden" name="hData00116" value="01121">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">
<input type="hidden" name="hData00306" value="01111">

</form>
</body>
</html>

2022/11/08 15:42:25



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">

</form>
</body>
</html>

2022/11/08 15:42:26



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:27



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:28



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:29



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:30



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:31



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:32



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:33



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:34



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:35



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:36



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:37



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:38



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:39



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:40



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:41



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:42



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:43



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 1;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:44



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 2;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:45



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 3;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:46



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 4;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:47



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 5;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:48



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 6;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:49



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 7;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:50



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 8;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:51



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 9;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:52



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 10;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:53



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 11;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:54



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 12;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:55



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 13;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:56



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 14;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">

</form>
</body>
</html>

2022/11/08 15:42:57



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 15;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="00000">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:07



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:08



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:09



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 0;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:19



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 16;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:20



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 16;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:27



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 31;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:28



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 31;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:29



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 31;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:34



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 16;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:35



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 16;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

2022/11/08 15:45:36



<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/css/style.css" rel="stylesheet" type="text/css">
<style type="text/css">
table {
	table-layout: fixed;
	word-wrap:break-word;
	word-break:break-all;
}
span {
	display:-moz-inline-box;
	display:inline-block;
	width:40px;
}
</style>
<script type="text/javascript">
	var idx = 16;
	var roomNum = 128;
	var portNum = 16;
	var roomNumPerPage = 10;
	var curDataPage = 0;
	var totalDataPage = Math.ceil(roomNum/roomNumPerPage);
	// define a two-dimensional array to store data
	var roomData = new Array();
	for (var row=0; row<=roomNum; row++) {
		roomData[row] = new Array();
		for (var col=0; col<=portNum; col++) {
			roomData[row][col] = "";
		}
	}
	function arraryToCsv(arrayName, columnDelimiter, lineDelimiter)
	{
		if (arrayName == null) {
			return null;
		}
		// ',',';','space','tab'
		var columnDelimiter = columnDelimiter || ',';
		// '\n','\r','\r\n'
		var lineDelimiter = lineDelimiter || '\r\n';
		var outStr = [];
		for (var row=0; row<arrayName.length; row++) {
			for (var col=0; col<arrayName[row].length; col++) {
				outStr += arrayName[row][col];
				if (col < arrayName[row].length-1) {
					outStr += columnDelimiter;
				}
			}
			outStr += lineDelimiter;
		}
		return outStr;
	}
	function getRowAndColStr(row, col)
	{
		var str = "";
		if (row < 10) {
			str = "00" + row;
		} else if (row < 100) {
			str = "0" + row;
		} else {
			str = row;
		}
		if (col < 10) {
			str += "0" + col;
		} else {
			str += "" + col;
		}
		return str;
	}
	function loadInit()
	{
		var port = document.getElementById('port');
		for (var i=1;i<=portNum;i++) {
			port.options.add(new Option(i,i-1));
			if (idx == (i-1)) {
				port[idx].selected=true;
			}
		}
		var curPage = document.getElementById('curPage');
		for (var i=0; i<totalDataPage; i++) {
			curPage.options.add(new Option(i+1, i));
		}
		// init roomData from server
		var row1 = 0, col1 = 0;
		for (var row=0; row<=roomNum; row++) {
			if (row == 0) {
				for (var col=1; col<=portNum; col++) {
					roomData[row][col] = "Port"+col;
				}
			} else {
				roomData[row][0] = row;
				for (var col=1; col<=portNum; col++) {
					var obj = document.forms["dataForm"]["hData"+getRowAndColStr(row, col)];
					if (typeof(obj) != "undefined") {
						roomData[row][col] = obj.value;
					}
				}
			}
		}
		updateTable(curDataPage);
	}
	function onDataClick(row, col)
	{
		var obj = document.getElementById("room");
		var curRow = curDataPage * roomNumPerPage + row;
		if (curRow <= roomNum) {
			obj.value = roomData[curRow][col];
			var port = document.getElementById('port');
			port[col-1].selected=true;
		}
	}
	function updateCurPage(optionID)
	{
		var options = document.getElementById("curPage").options;
		for (var i=0; i<=optionID; i++) {
			options[i].selected = true;
		}
	}
	function updateTable(curPage)
	{
		// clear table
		for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = "";
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					obj.innerHTML = "";
				}
			}
		}
		var rows = roomNumPerPage;
		if ((curDataPage == (totalDataPage-1)) && (roomNum % roomNumPerPage != 0)) {
			rows = roomNum % roomNumPerPage;
		}
		// update table
		for (var row=1,col=0; row<=rows; row++,col=0) {
			var obj = document.getElementById("label"+getRowAndColStr(row, col));
			if (typeof(obj) != "undefined") {
				obj.innerHTML = curPage*10 + row;
			}
			for (col=1; col<=portNum; col++) {
				var obj = document.getElementById("label"+getRowAndColStr(row, col));
				if (typeof(obj) != "undefined") {
					var curRow = curPage * roomNumPerPage + row;
					obj.innerHTML = roomData[curRow][col];
				}
			}
		}
	}
	function doChangePage()
	{
		var obj = document.getElementById("curPage");
		curDataPage = obj.options[obj.selectedIndex].value;
		updateTable(curDataPage);
	}
	function doPrevPage()
	{
		curDataPage--;
		if (curDataPage >= 0) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = 0;
		}
	}
	function doNextPage()
	{
		curDataPage++;
		if (curDataPage < totalDataPage) {
			updateTable(curDataPage);
			updateCurPage(curDataPage);
		} else {
			curDataPage = totalDataPage - 1;
		}
	}
	function doDefault()
	{
		document.getElementById("roomAct").value = "4";
		document.getElementById("name_dial").submit();
	}
	function doAdd()
	{
		document.getElementById("roomAct").value = "3";
		document.getElementById("name_dial").submit();
	}
	function doDelete()
	{
		document.getElementById("roomAct").value = "2";
		document.getElementById("name_dial").submit();
	}
	function doDelAll()
	{
		document.getElementById("roomAct").value = "1";
		document.getElementById("name_dial").submit();
	}
	function doImport()
	{
		var url = document.getElementById("uploadFile").value;
		var ext = url.substring(url.lastIndexOf('.')+1);
		if (ext != "csv" && ext != "CSV") {
			alert('File is not .csv format');
			return;
		}
		document.getElementById("upload").submit();
	}
	function doExport(data, fileName)
	{
		// if not set use default fileName
		var fileName = fileName || 'export.csv';
		var csvFile = arraryToCsv(data);
		try {
			var blob = new Blob(["\uFEFF" + csvFile], {'type': 'text/csv;charset=utf-8;'});
			// saveAs(blob, fileName);
			if (navigator.msSaveOrOpenBlob) {
				navigator.msSaveOrOpenBlob(blob, fileName);
			} else {
				var uri = URL.createObjectURL(blob);
				var downloadLink = document.createElement('a');
				if (downloadLink.download !== undefined) {
					downloadLink.href = uri;
					downloadLink.download = fileName;
					downloadLink.style.visibility = 'hidden';
					document.body.appendChild(downloadLink);
					downloadLink.click();
					document.body.removeChild(downloadLink);
				}
			}
		} catch (e) {
			alert("Your browser does not support this function");
			return false;
		}
	}
	function importFileChange(elementId, showId)
	{
		var uploadFileValue = document.getElementById(elementId).value.split("\\");
		var length = uploadFileValue.length;
		var uploadFileName = uploadFileValue[length -1];
		if (uploadFileName.length > 13) {
			uploadFileName = uploadFileName.substring(0,13) + "...";
		}
		if (uploadFileName.length > 0) {
			document.getElementById(showId).innerHTML = uploadFileName;
		}
	}
</script>
</head>
<body onload="loadInit()">
<table width="90%" border="0" id="title">
	<tr>
		<td class="header"><strong>Building Linkage Settings</strong></td>
	</tr>
	<tr>
		<td><hr></td>
	</tr>
</table>
<form id="upload" method="post" action="upload.cgi" enctype="multipart/form-data">
	<table width="90%" border="0">
		<tr>
			<td>
				<input type="hidden" name="referer" value="advanced">
				<input type="file" name="uploadFile" id="uploadFile" accept=".csv" />
				<input type="submit" value="Import">
				<input type="button" value="Export" onclick="doExport(roomData, 'configuration.csv')" />
			</td>
		</tr>
		<tr>
			<td><hr></td>
		</tr>
	</table>
</form>
<form id="name_dial"  method="post" action="advanced.cgi">
	<table width="90%" id="roomAdd" border="0">
		<tr>
			<td>
				Port:
				&nbsp;
				<select style="width:60px;" size="1" name="port" id="port"></select>
				&nbsp;&nbsp;&nbsp;
				Apartment:
				&nbsp;
				<input maxlength="5" style="width:100px;" name="room" id="room" value="">
				<input id="roomAct" name="roomAct" type="hidden" value="0">
				<span></span>
				<input style="width:90px;" type='button' value="Add" onClick="doAdd()">
				<input style="width:90px;" type='button' value="Delete" onClick="doDelete()">
				<input style="width:90px;" type='button' value="Delete All" onClick="doDelAll()">
			</td>
		</tr>
	</table>
</form>
<table width="90%" id="tableHeader">
	<!--table header-->
	<tr bgcolor='#a5a9af' align='center'>
		<td height='20px'><label>Index</label></td>
		<script>
		for (var row=0,col=1; col<=portNum; col++) {
			document.write("<td><label id='label"+getRowAndColStr(row, col)+"'>"+"Port"+col+"</label></td>");
		}
		</script>
	</tr>
	<!--create table-->
	<table width="90%" id="tableContent" border="1" style="border-collapse:collapse">
		<script>
			for (var row=1,col=0; row<=roomNumPerPage; row++,col=0) {
				// index
				document.write("<tr bgcolor='#F9FAFC' align='center'><td><label id='label"+getRowAndColStr(row, col)+"'>"+row+"</label></td>");
				// data
				for (col=1; col<=portNum; col++) {
					document.write("<td height='24px' style='empty-cells: show'; onClick=\"onDataClick("+row+","+col+")\"><label id='label"+getRowAndColStr(row, col)+"'></label></td>");
				}
			}
		</script>
	</table>
</table>
<table width="90%" cellpadding="1">
	<tr bgcolor='#a5a9af' align='center'>
		<td><label style='font-size:13px'>Page</label>&nbsp;<select id='curPage' onChange="doChangePage()"></select></td>
		<td><input style="width:70px;" type='button' value="Prev" onClick="doPrevPage()"></td>
		<td><input style="width:70px;" type='button' value="Next" onClick="doNextPage()"></td>
	</tr>
</table>
<form name="dataForm">
<input type="hidden" name="hData00101" value="01114">
<input type="hidden" name="hData00102" value="00000">
<input type="hidden" name="hData00103" value="00000">
<input type="hidden" name="hData00104" value="00000">
<input type="hidden" name="hData00105" value="00000">
<input type="hidden" name="hData00106" value="00000">
<input type="hidden" name="hData00107" value="00000">
<input type="hidden" name="hData00108" value="00000">
<input type="hidden" name="hData00109" value="00000">
<input type="hidden" name="hData00110" value="00000">
<input type="hidden" name="hData00111" value="00000">
<input type="hidden" name="hData00112" value="00000">
<input type="hidden" name="hData00113" value="00000">
<input type="hidden" name="hData00114" value="00000">
<input type="hidden" name="hData00115" value="00000">
<input type="hidden" name="hData00116" value="00000">
<input type="hidden" name="hData00201" value="00000">
<input type="hidden" name="hData00202" value="00000">
<input type="hidden" name="hData00203" value="00000">
<input type="hidden" name="hData00204" value="00000">
<input type="hidden" name="hData00205" value="00000">
<input type="hidden" name="hData00206" value="00000">
<input type="hidden" name="hData00207" value="00000">
<input type="hidden" name="hData00208" value="00000">
<input type="hidden" name="hData00209" value="00000">
<input type="hidden" name="hData00210" value="00000">
<input type="hidden" name="hData00211" value="00000">
<input type="hidden" name="hData00212" value="00000">
<input type="hidden" name="hData00213" value="00000">
<input type="hidden" name="hData00214" value="00000">
<input type="hidden" name="hData00215" value="00000">
<input type="hidden" name="hData00216" value="00000">

</form>
</body>
</html>

